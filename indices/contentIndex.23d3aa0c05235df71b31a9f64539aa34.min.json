{"/":{"title":"Coding APie","content":"\n# Coding APie\n\nHere you will find everything from agile project management, passing through dev, DevOps, data, and maybe a little bit about IT Security\n\n- üêà‚Äç‚¨õ [Agile](https://pieri.io/tags/agile/)\n- üíª [Coding](https://pieri.io/tags/coding)\n- üóÑÔ∏è [Data Engineering](https://pieri.io/tags/data-engineering/)\n- üõ°Ô∏è [IT Sec](https://pieri.io/tags/security)\n- ‚öôÔ∏è [Productivity](https://pieri.io/tags/productivity)\n- üíº [Project Management](https://pieri.io/tags/project-management)\n- üóÇÔ∏è [SQL](https://pieri.io/tags/SQL)\n- üêç [Python](https://pieri.io/tags/python)\n\n## Whoami\n\nMy name is Arthur Pieri, I'm a data engineer living in Brazil.\n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[]},"/5W2H":{"title":"5W2H","content":"# Definition\n5W2H is a common tool used in Business Management in order the effectively communicate tasks and objectives. And it's a must-have tool when working in Project Management.\n\nSimply put it simply it's the 7 questions that need to be answered to give a complete understanding of the tasks and achieve better results. Those are the following questions:\n\n### What? (What must be done)\nThe first thing that needs to be clear to everyone, is a definition of what must be done, in the most precise manner possible.\n\nExample: \"Hold the Daily meeting\"\n\n### Why? (Why are we doing this)\nThis is a deceptively simple question that can be hard to answer, sometimes because we don't have the full picture. Sometimes, some self-called Managers think that telling why could diminish their authority. However, we live in a different world nowadays, where information is abundant and people search for meaning and purpose in everything they do.\n\nExample: \"We do the daily meeting so that everyone on the team is aware of the tasks being done and more able to provide help\"\n\n### Where (where will it be done?)\nThis question can be searching for a physical place, a tool, somewhere where the work must be done.\n\nExample: We will be holding the daily meeting through Google Meet (or in meeting room number 3 on the second floor)\n\n### When (In what day and/or hour this must be done?)\nThis is a simple and obvious question and therefore is often forgotten, you just need to provide a time, an Hour, a day, a week it all depends on the task at hand.\n\nExample: Hold the daily meeting every day of the week at 9 am.\n\n### Who (who will do it?)\n\nAnother very important question that causes many problems, as we often do not clearly define who should perform each task, and it may end up not being done.\n\nExample: The Nhanderu Project team should hold a daily meeting.\n\n### How (how will it be done?)\n\nUsually, here we can express some limitations of the tasks or even a general definition of how to do it, often this question should be answered by the person or team responsible for performing the task.\n\nExample: The daily meeting should last up to 15 minutes, and answer the 3 basic questions (What I did, what I will do, and if I have any impediments).\n\n### How much (how much will it cost?)\n\nIt is a question that cannot always be answered, so some authors will also talk about the 5W1H, where \"How Much\" is not applied. Generally, it is important to know the value of the tasks and in our example we can use this question to show the cost that stopping an entire team can have for the company, allowing meetings to be less frequent and more objective.\n\nExample: Every 15 minutes of the Nhanderu Project Team costs roughly 47 Dollars.\n\n## The final example (using every question)\n\n\u003e The task:\n**Daily meeting**\nMust be held by the Nhanderu project team, every day of the week at 9 am on Google Meet\nIt must last at most 15 minutes and everyone on the team must answer the 3 basic questions:\n\u003e 1. What I did since our last meeting\n\u003e 2. What I will do until our next meeting\n\u003e 3. Do I have any impediments, blocks, or delays?\n\u003e \nThe meeting has been successful once the team understands what tasks are being done if anyone needs help, and what can be done to remove obstacles so we can achieve our goal.\n\n# Conclusion\n\nAll questions are self-explanatory and may often seem like \"nonsense\", but once you internalize the questions and always try to answer them when performing a task, you will realize that fewer mistakes are made, the overall understanding is better, and results are achieved more often.","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["agile","tools","project-management"]},"/98-economy-on-Data-lake":{"title":"98% Economy on Data Lake","content":"## The beginning\n\nOne day I was looking at some of the KPIs from our Data lake; we use a pretty \"standard\" stack with:\n\n- [[Snowflake]] is our data lake.\n- [[Airflow]] to manage execution\n- [[Python]] with [[pandas]] to execute the ETL process\n\nOnly one person made this stack on a tight schedule, so we expected to have some places to optimize. And one day, I was talking to a friend who said that he was able to cut costs from their Data Lake simply by changing a lot of processes  that were created with:\n\n```sql\nCREATE OR REPLACE TABLE xxxxx\n```\n\nAnd then I thought, if things like that happened in more prominent companies, we probably would have some stuff like that on our own.\n\nSo we started looking and found one pipeline where every table was constructed with the infamous CREATE OR REPLACE.\n\n## Collecting data\n1. The first \"red flag is that our fail-safe was way more extensive than the actual database\n![[datalake_storage_before.png]]\n2. The other thing that caught our attention was the number of tables being created in a single pipeline: 26. The mean time to run the pipeline was close to 11 minutes for a pipeline that runs every 30 minutes.\n\n## From top to bottom\n### The first step\nThe first thing we did after that was to look at the most important and used table on the pipeline, which is one of those [[_OBT]]s. \nAfter gathering all the columns and finding where those columns came from, we found the second problem:\n- In the urge to follow a \"design pattern,\" we created lots of useless tables. Ok, we had schemas that follow a pattern:\n\t- Transient\n\t- Raw\n\t- Trusted\n\t- Internal\n- The problem was we didn't need this, and we were creating schemas and tables that did nothing to the data and were just there, wasting storage and time.\n\n### The second step\nUnderstanding our source tables and how to extract only the delta from them. This took some time, but nothing too complex.\n\n### The third step\nDocument everything!\n- What tables were created before\n- What tables were being created now\n- Were there any columns that were being left out?\n- Every schema removed got its own commit, so it would be easy to roll back if needed.\n- Run tests\n\n### Finally\nWe applied the changes in production, and here are some of the improvements:\n- The mean time to run the pipeline went from almost 11 minutes to around 6 minutes.\n- The amount of written data was cut down by 98% (From close to 700MB to around 10MB). Remember, it was being written every 30 minutes.\n![[datalake_storage_half_way.png]]\n- The number of tables down from 26 to 11\n\n## Thoughts\n- Even though I am only presenting the most significant differences, we got some other less impressive and yet substantial changes, like a 52% reduction on our customer orders table.\n- And a sneak peek of the other big economy we made:\n![[datalake_storage_end.png]]\n\t- From 1.3TB to 550GB","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["data-engineering","data"]},"/Agile-Projects-Key-Principles-for-Success":{"title":"Agile Projects - Key Principles for Success","content":"## 1. Empowerment: The Heart of Agility\n\n- **What It Is**: In agile teams, empowerment means everyone is equally responsible for the project's success. This approach removes traditional hierarchies, fostering a culture of shared responsibility and collaboration.\n- **Benefit**: Empowered teams are more agile, adaptive, and innovative. They feel a greater sense of ownership, leading to higher-quality outcomes.\n\n## 2. Discipline: Self-Management Over Supervision\n\n- **The Concept**: Agile discipline involves self-management rather than relying on a supervisor. Each team member is accountable for their work and also plays a role in motivating the team.\n- **Advantage**: This leads to a more responsible and mature team dynamic, where members are proactive and committed to the project's success.\n\n## 3. Courage: The Backbone of Decision-Making\n\n- **Why It Matters**: Courage in agile teams is about taking responsibility and making decisions confidently. It's about facing challenges head-on and not shying away from tough choices.\n- **Impact**: Courageous teams are more likely to innovate and solve problems effectively, as they're not afraid to take risks or try new approaches.\n\n## 4. Motivation: Fuel for High Performance\n\n- **The Role of Motivation**: Without a traditional boss, motivation in agile teams comes from within and from each other. It's about finding a balance where everyone feels driven and supported.\n- **Result**: A motivated team is productive and enthusiastic, leading to better performance and job satisfaction.\n\n## 5. Passion: The Secret Ingredient for Excellence\n\n- **Understanding Passion**: In agile, passion is about loving what you do. Passionate teams are likelier to go the extra mile and deliver exceptional results.\n- **Outcome**: Passionate teams don't just meet expectations; they exceed them, bringing creativity and excellence to their work.\n\n## 6. Coaching: Everyone as a Leader\n\n- **Agile Coaching**: Agile coaching is about everyone taking on a leadership role instead of centralized leadership, especially in challenging times.\n- **Effect**: This approach builds a strong, supportive, and resilient team where members learn from each other and grow together.\n\n## 7. Stable Teams: The Foundation of Maturity\n\n- **Stability's Role**: Teams need time to mature and understand each other's strengths and weaknesses. Constant changes hinder this process.\n- **Why Stability Matters**: Stable teams are more efficient, cohesive, and effective. They leverage their collective experience to achieve better results.\n\n## 8. Cross-Functional Teams: Versatility in Action\n\n- **The Ideal Team**: Agile teams should be small, motivated, and cross-functional, with each member willing to go beyond their specialty.\n- **Advantage**: This versatility leads to a more dynamic, flexible, and capable team ready to tackle various challenges.\n\n## 9. Available Client: The Agile Partnership\n\n- **Client Involvement**: Continuous client engagement is crucial in agile projects. It ensures the team is aligned with the client's vision and can adapt to feedback quickly.\n- **The Benefit**: This close collaboration leads to more successful projects, as the team can make informed decisions and stay on track with the client's needs.\n\nBy embracing these principles, agile teams can achieve remarkable success, delivering projects that are efficient, effective, innovative, and aligned with client needs.","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["agile","agile-foundations"]},"/Agile-culture":{"title":"Agile Culture","content":"# What is Organizational Culture?\n\nOrganizational Culture is a generic term to describe an organization's shared values. I suggest you read this article by [Harvard Business Review](https://hbr.org/2013/05/what-is-organizational-culture).\n\n\u003e \"Organizational culture defines a jointly shared description of an organization from within.\" ‚Äî Bruce Perron\n\n## The role of \"The Organization\" in Agile\n\nAgile is a concept composed of many factors, including the Organization. The central role of the Organization is to ensure that the team can fulfill [[The History of agile#The Pillars]]:\n\n\u003e [!EXAMPLE] Pillars\n\u003e\n\u003e - **Individuals and interactions** over processes and tools\n\u003e - **Working software** over comprehensive documentation\n\u003e - **Customer collaboration** over contract negotiation\n\u003e - **Responding to change** over following a plan\n\nAgile emerges from the Team, the Project, and the Stakeholders. Yet, without solid ground, there can be no success on any Agile project.\nThe Organization provides a solid base and ensures all the team members' safety to take risks and try new things without being blamed for a mistake.\nIt's essential to understand what we call \"The organization\" because it is not only the formal entity and its partners but every single person who works or helps the Organization; it's about the individual commitment towards better results.\n## Agile Culture\n\nIt's easy to overlook Culture in an [[agile team]]. Focusing only on the 3 to 9 people who are part of the core Scrum team is a terrible mistake since for that team to be productive, they need assistance from the organization and help to stay dedicated and focused on the work.\n\nWith that said, there are a few fundamental values that compose an agile culture:\n\n\u003e [!EXAMPLE] Key values\n\u003e\n\u003e - Encourage greater responsibility and teamwork. Allowing everyone to know the team's performance and ask for better results, with no hierarchy.\n\u003e - At the same time, allow more individual freedom so each person can organize the way that fits them best.\n\u003e - Help the team gain more confidence in their work.\n\u003e - Build a solid understanding that the focus is on the value delivered to the client and that each can choose their best way.\n\u003e - Do not worry about timesheets, only about deliveries. Everyone on the team must have good time management skills.\n\nAgile Culture is a change of paradigm. It completely changes how we think and interact with people (Teams, clients, and stakeholders). When agile becomes the Organization's DNA, everyone starts to work closer and be more engaged in pursuing a common ideal.\n\n## In a nutshell\n\n\u003e [!abstract] Summaries\n\u003e - Being agile is working to deliver value, not to follow detailed, rigid, and standardized planning or bureaucracy.\n\u003e - The main challenge is to build this Agile Culture and not only start doing some practices or use some methods or tools.\n\u003e - Agile Culture helps decisions be made faster and with a better understanding of the problem.\n\u003e - Achieving a well-served client by happy and motivated people ensures a healthy long-term relationship.\n\n","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["agile","agile-foundations"]},"/Agile-culture-and-Growth":{"title":"Agile culture and Growth","content":"# Agile Culture and Growth\n\nOne of the main benefits of the Agile culture is that it allows us to keep learning. Keep trying to improve and not be afraid of possible mistakes (knowing that a mistake is a good improvement opportunity.\n\nAgile is about learning, improvement, and growth. It is about you being able to adapt and reach your goals. It goes deeper and further than just attending courses, workshops, or training camps. It's about trying, failing, trying again, and keep moving forward with the eyes on the prize (Value to the customer).\n\n## Goals and Learning\n\nDefining clear Goals and Objectives is vital to the [[Agile culture]].\n\nWith Goals and objectives, the team can self-organize. Without them, there is no planning and no way to learn from mistakes; after all, **What would be a mistake**?\n\n\u003e [!danger] Error\n\u003e  \n\u003e \"If you don't know where you're going, any road will get you there.\" Lewis Carroll - Alice in Wonderland\n\nYou can learn more about goals by reading [[_How to define Goals]].\n\n## Learning from past Success (and failures)\n\nThe other essential part of the [[Agile culture]] is to always look back to previous [[projects]], [[sprints]], or attempts and dissect them, find out what you think could be better, and what should remain.\n\nUnderstanding that even though software engineers crafted the Agile Manifesto, it was never about software. It was always about people and finding the best for the parties involved.\n\nEvery organization, therefore, must focus on providing an environment that allows for autonomy, trust, motivation, and meaningful relations.\n\nThere are an infinite number of ways to create this culture. One way to do it is by encouraging a management process that focuses on:\n\n- Inspection\n- Adaptation\n- Communication\n- Quick value delivery\n\n\u003e [!warning] Remember \n\u003e\n\u003e There is no best way to implement an agile culture; you must try it.","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["agile","agile-foundations"]},"/Agile-why-should-you-care":{"title":"Agile, why should you care?","content":"In the past decade, we've heard more and more about \"Agility,\" \"[[Agile]],\" \"[[_Scrum]],\" and some other ways we could grow past the Waterfall model.\n\n## What is Agile?\n\n[[Agile techniques]] exist between order and chaos. They don't demand complete order and everything working perfectly, just a clear, well-defined, [[Goal]]. Everything else will adjust at the right time.\n\nKnowing that [[agile]] seems to be the ideal way to manage projects that:\n\n- Have multiple ways to reach the final Goal;\n- Have no clear path towards the completion;\n- Have lots of external interference on results;\n- Are complex and can have many valid outcomes.\n\n\u003e To help you understand, let's think of an example where Agile would be ideal (besides the use in [[software development]] since it is its primary use).\n\n## Example: Marketing APie\n\nA marketing agency wants to make a new campaign using \"memes\" to raise awareness of its Brand. They are trying to think of ways to make that happen and come up with two options.\n\n### Traditional Management\n\nThey could use the traditional way to manage the project, so they would:\n\n1. Have a kick-off meeting;\n2. Research memes that are trending;\n3. Create a Project Plan;\n4. Ask if everyone agrees with the plan;\n5. Review feedback;\n6. Budget the plan;\n7. Ask for approval;\n8. Plan, step-by-step, all that is needed;\n9. Craft and validate the Project charter;\n10. Select each member of the team that fits the role needed;\n11. Only after all this, start working on the \"Dankest of all memes.\"\n\nAs we can see, it took a long time to start working on the project, and by the time they started, all the planning would have gone to waste since the \"meme world\" changes very fast; what they looked up last week is no longer trending, its \"outdated.\"\n\n### Using Agile\n\nOn the other hand, by using an Agile approach, we would:\n\n1. Define a set of metrics\n2. Select a handful of options and launch them in a \"beta testing\" type of approach\n3. Keep track of the best performers\n4. Improve based on metrics\n5. Repeat\n\nBy using an Agile approach, the company knows it needs to deploy an \"[[MVP]],\" a proof of concept as soon as possible, and keep improving on what performs best. And even though they may have yet to launch a final version of the campaign, they would have collected data and reached out to many people differently.\n\nTherefore, in this example, it's clear that the Agile approach is the best, but does it mean it is always the best?\n\nTo better understand Agile methods, search for the tag #agile and read more about [[Agile culture]].\n","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["agile","agile-foundations"]},"/Defining-Agile":{"title":"Defining Agile","content":"Previously, we've talked about Àú[[Agile, why should you care?]]Àú. But how can you care about something you need to help understand what it is? To solve that problem, we will create a definition that will be used in my posts from now on.\n\n## Dictionary definition\nDefining agile can be tricky. If we look at the Dictionary definition, it says: \n\u003e \"Characterized by quickness, lightness, and ease of movement; nimble.\"\n\nThat could be why the First Signatories of the [Agile Manifesto]] decided to use this name as a counterpoint to the traditional methods and their need for control, which were highly time-consuming and kept the team from the actual work: Developing software.\n\n## Project Management definition\nOn the Project Management side, the definition is still up for debate. But we can use what was published in the International Journal of Project Management, Volume 34, Issue 4, May 2016. Agile is a construct formed by three main factors:\n\n\u003e Agile must be seen. As a result, it refers to the team's performance and not as an adjective for a specific method.\n\u003e The Agile team performance is affected by the [[Ability to change]] the [[Project Plan]] and the [[client's active involvement]] throughout the project.\n\u003e [[Agile]], as a [[Team performance indicator]], has different levels and must consider internal and external factors.\n\n## [The Agile Manifesto](http://agilemanifesto.org/history.html)\nOf course, a few core principles were created and defined in [[The History of Agile and the Agile Manifesto.\n\n## Defining APie\nUsing what we have learned so far, we can agree with a more straightforward definition that will be used in all the posts of this blog:\n\n\u003e [!note]  Definition\n\u003e\n\u003e \"Agile is a quality for [[the Project]],  [[the Team]], and [[the Organization]]. And it must be present in the whole process. So we are working in an Agile Environment when:\n\u003e - The team can frequently deliver valuable features or products to the client;\n\u003e - The team can accept changes in the planning as long as those changes drive us closer to the Project goal;\n\u003e - The company (organization) provides the tools, inputs, requirements, and support so that the Team can work best and deliver the most \"Value.\" \n\u003e - Understand that definition is critical when implementing an Agile project since it needs total commitment from all the stakeholders and parties involved.","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["agile","agile-foundations"]},"/Email-Management-System-Performance-Optimization-Project":{"title":"Email Management System Performance Optimization Project","content":"# Email Management System Performance Optimization Project\n\n## Executive Summary\n\nThis report documents the successful optimization of our fundraising platform's email management system. Through strategic database restructuring and application modernization, we achieved a 95% reduction in query response time while significantly reducing infrastructure costs. The project addressed critical performance issues that were impacting customer experience and system reliability.\n\n## Problem Identification\n\nOur fundraising platform's email management system, which enables customers to send emails, track KPIs, and manage campaigns, was experiencing severe performance degradation as the user base grew. Reports and dashboards were loading slowly or failing during peak usage periods.\n\nInitial assessment suggested a simple need to separate OLTP (transactional) and OLAP (analytical) workloads. However, deeper investigation revealed more fundamental issues with the database architecture.\n\n## Technical Analysis\n\nKey findings from our database analysis:\n\n- The database was relatively modest in size (~700GB), running on an Aurora X-Large instance.\n- A single email event log table accounted for 95% of all database utilization.\n- This table contained multiple event types (sends, opens, clicks) in a unified structure.\n- Five different indexes on this table constituted 18% of its total size\n- ETL batch processing was creating contention with operational queries\n\nThese findings indicated that our performance issues stemmed from database design rather than infrastructure limitations.\n\n## Solution Implementation\n\nWe implemented a comprehensive restructuring approach:\n\n1. Separated databases based on workload patterns\n2. Created a dedicated event log database using Change Data Capture (CDC)\n3. Implemented separate tables for different event types to optimize query patterns\n4. Developed a pre-calculated metrics database for reporting and visualization\n5. Implemented AWS SNS/SQS for asynchronous event processing\n6. Supported the development team's initiative to refactor the application into microservices using Go\n\n## Results and Business Impact\n\nThe optimization delivered measurable improvements:\n\n- Database response time was reduced by 85% through architectural changes alone.\n- Overall system response time improved from 5 seconds to under 200ms when combined with application refactoring.\n- Infrastructure costs were reduced by migrating to smaller Aurora instances.\n- System reliability enhanced through the ability to deploy additional read replicas\n- Improved scalability foundation for future growth\n\n## Conclusion\n\nThis project demonstrates how targeted database architecture improvements combined with modern application design principles can dramatically enhance system performance and reliability while reducing operational costs. The new architecture provides the scalability and performance needed to support our growing customer base.\n","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["data-engineering","data"]},"/Exploring-Data-Structures-in-C-Programming-A-Beginners-Guide":{"title":"Exploring Data Structures in C Programming: A Beginner's Guide","content":"### Exploring Data Structures in C Programming: A Beginner's Guide\n\n**Introduction to Data Structures in C**\n- **Why It Matters**: As you delve deeper into programming and data, understanding what happens \"under the roof\" is crucial. Before tackling complex data structures, it's essential to grasp the basics, starting with [[_Pointers in C_]].\n\n### Understanding Basic Data Types in C\n- **The Foundation**: In C, basic data types are the building blocks for more complex structures. Unlike Python, which abstracts many details, C offers a closer look at how data is stored and managed.\n- **Examples of Basic Data Types**:\n    1. **int**: Stores whole numbers.\n    2. **float**: Handles decimal numbers.\n    3. **double**: Similar to `float` but with more precision.\n    4. **char**: Holds a single character.\n    5. **_Bool**: Represents true (1) or false (0).\n    6. **void**: Indicates no specific type.\n- **Remember**: The size and range of these types can vary depending on the compiler, but there are standard minimum sizes.\n\n### Diving into Complex Data Types\n- **Beyond the Basics**: Complex data types allow for more sophisticated data handling in C. They include:\n    1. **Structures (`struct`)**: Combine different types under one name. Useful for organizing complex data.\n        ```c\n        struct student {\n            char name[50];\n            int age;\n        };\n        ```\n    2. **Unions (`union`)**: Store different types in the exact memory location, but only one at a time.\n        ```c\n        union Data {\n            int i;\n            float f;\n            char str[20];\n        };\n        ```\n    3. **Arrays**: A collection of items of the same type.\n        ```c\n        int numbers[10];\n        ```\n    4. **Pointers**: Variables that store the address of another variable.\n        ```c\n        int *p;\n        ```\n    5. **Enumerations (`enum`)**: Define a set of named integral constants.\n        ```c\n        enum day {\n            monday, tuesday, wednesday, thursday, friday, saturday, sunday  \n        };\n        ```\n    6. **Functions**: Can be treated as data types based on their return value.\n        ```c\n        int add(int a, int b) {\n            return a + b;\n        }\n        ```\n\n### Abstract Data Types (ADT) in C\n- **Encapsulating Data and Operations**: ADTs define a set of operations for data, hiding the implementation details. In C, ADTs are typically implemented using `struct` and functions.\n- **Example - Implementing a Stack**:\n    ```c\n    typedef struct {\n        int top;\n        int capacity;\n        int *array;\n    } Stack;\n\n    Stack* createStack(int capacity){\n       // function to create a stack\n    }\n\n    void push(Stack* stack, int item){\n       // function to push items in the stack\n    }\n\n    int pop(Stack* stack){\n       // function to pop item from the stack\n    }\n    ...\n    ```\n    In this example, `Stack` is an ADT that encapsulates data (array, capacity, top) and provides specific operations (`createStack`, `push`, `pop`).\n\n### Expanding Your Knowledge\n- **Next Steps**: To further explore data structures in C, consider learning about:\n    - [[_Clang - linked lists]]\n    - [[_Clang - queues]]\n    - [[_Clang - stacks]]\n    - [[_Clang - trees]]\n    - [[_Clang - Graphs]]\n    - [[_Clang - Hash Tables]]\n    - [[_HyperLogLog]]\n    - [[_Bloom filter]]\n\nUnderstanding these fundamental concepts in C will give you a solid foundation for exploring more advanced data structures and algorithms. This knowledge is not just academic; it's a practical tool to enhance your programming skills and problem-solving abilities.","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["coding","clang","data-engineering","python"]},"/Mastering-the-Elevator-Pitch-Your-Key-to-Captivating-Investors":{"title":"Mastering the Elevator Pitch: Your Key to Captivating Investors","content":"\n## The Concept of the Elevator Pitch\n- **What It Is**: Imagine stepping into an elevator and finding yourself face-to-face with a potential investor. You have just the duration of the ride, from the first to the tenth floor, to pitch your dream project or product. This scenario is the essence of the elevator pitch ‚Äì a powerful tool designed for critical, time-sensitive opportunities.\n\n### Crafting a Compelling Elevator Pitch\n- **Brevity Meets Value**: Your pitch must be concise yet impactful, encapsulating the essence and value of your project. It's about making every word count and leaving a lasting impression.\n\n### Critical Elements of an Effective Pitch\n- **Target Audience**: Clearly define who your product is for. Understanding and articulating your audience is crucial.\n- **Product Identity**: What is your product? A clear, jargon-free explanation is vital.\n- **Importance**: Why does your product matter? Highlight its significance in the market.\n- **Existence**: Explain the reason behind your product's creation. What gap does it fill?\n- **Value Addition**: What unique value does your product bring to the table?\n- **Purpose and Goals**: Clearly state what you aim to achieve with your product.\n\n### A Common Framework for Your Pitch\n- **A Structured Approach**: Use this template for clarity: \"For [target customer] who [need], our [product] is a [product type] that [benefits]. Unlike [alternatives], our product [unique differentiators].\"\n- **Why This Works**: This format helps you cover all essential aspects succinctly, making your pitch comprehensive yet compact.\n\n### The Elevator Pitch as a Tool\n- **Beyond Just a Pitch**: The elevator pitch is more than a persuasive speech. It's a framework that helps you deeply understand your project. It forces you to distill your vision into a clear, concise statement.\n- **Team Alignment**: Using this pitch helps set a clear vision for the project, ensuring everyone on the team is aligned and working towards a common goal.\n\n### Conclusion: The Power of Clarity\n- **Your Takeaway**: Mastering the elevator pitch equips you with a powerful tool to attract investors and refine your project's vision. It's about being clear, concise, and compelling. Remember, a well-crafted pitch can open doors to new possibilities and make your dream project a reality.\n\nBy embracing the art of the elevator pitch, you're not just preparing for a chance encounter with an investor; you're honing a skill that will serve you in all aspects of business communication.","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["agile","tools"]},"/Python-Mutable-and-Immutable-types":{"title":"Python - Mutable and Immutable types","content":"While programming in Python, have you ever found a variable that changed its value seemly out of the blue? \nPerhaps you found someone else's code that passes a variable to a function but returns nothing, and still, the variable was changed outside that function? \nOr have you just heard about that concept and want to learn more? \n\nHere is a brief explanation and a bit more detailed further below.\n\n## Python variables and types\nIf you have ever programmed in Python, you are probably familiar with variables and data types like:\n- int\n- str\n- list\n- dict\n- Etc...\n\n\u003e Those are the foundations of any program, but these data types can also be grouped into two different types.\n\n## Mutable vs. Immutable a straightforward explanation\nAs the name implies, mutable types are types that can be changed, and immutable types are those that cannot.\n\nHowever, it is more complex because we can think that if I can change the content of a variable, then variables are mutable. Or I know that tuples cannot be changed after they are assigned. Thus, it is immutable. And even tho the latter is immutable; it is not for that reason. \n\n### Immutable types\nHere is a list of data types that are immutable in Python:\n- str\n- int\n- float\n- bool\n- bytes\n- tuple\n\nMeaning that when I define it, it cannot change, so when I try to do something like:\n\n```python\nx = 3\ny = x\n```\n\nThe variable 'y' receives a copy of the information stored in 'x.' So, if I change the value in y, x remains the same.\n\n```python\nx = 3\ny = x\ny = 4\nprint(x, y)\n# outputs\n3, 4\n```\n\n### Mutable types\n- list\n- set\n- dict\n- other library-specific structures like pandas.DataFrame\n\nMutable types can change after their definition, and so when I try to execute something like:\n```python\nx = [1,5,4,3,2]\ny = x\n```\nThe variable 'y' does not receive a copy of the list, but only a reference to the original object, which means that changes made in 'y' affect 'x'.\n```python\nx = [1,5,4,3,2]\ny = x\n\ny.sort()\n\nprint(x)\nprint(y)\n# outputs\n[1,2,3,4,5]\n[1,2,3,4,5]\n```\nBecause both variables reference the same object in memory.\n\n## Why does it matter?\nOne big problem it may cause is that they are mutable for all their existence, so when you pass a variable as a parameter to a function, every change made inside that function will also reflect to the variable. \n```python\nx = [1,5,4,2,3]\n\ndef sort_list(unordered:list):\n\tunordered.sort()\n\n\treturn unordered\n\nordered = sort_list(x)\nprint(ordered)\nprint(x)\n# outputs\n[1,2,3,4,5]\n[1,2,3,4,5]\n```\nAnd this can lead to a myriad of problems during the execution of your code. So be mindful of this when working with mutable types.\n\nWith this in mind, you can return to your code and avoid some problems.\n\nBut if you want a little more detailed explanation, keep reading.\n\n## Real-World Applications\n\nUnderstanding mutable and immutable types becomes essential in many real-world applications. For example, when working with large data sets in data science, understanding immutability can be critical for memory management. If you're using a mutable object when an immutable one would suffice, you could use significantly more memory than necessary.\n\nSimilarly, when building web applications with frameworks like Django or Flask, understanding the difference between mutable and immutable types can help you avoid bugs that could occur due to unexpected variable mutation.\n\n## Variables, memory, and scope\nWhen working with variables, we are working with memory blocks. And so when I initiate a variable 'x,' what happens under the hood is that we get a memory block, save the value there, and keep a reference to that block. Something like:\n```python\nx = 3\n```\nWhat Python and your OS do is:\n1. Search for a free memory address, something like 0x9c001f *\n2. Assign the value '3' to that memory address\n3. Return the address and assign it to the variable x\n4. python does this every time you assign value to a variable (old or new)\n5. It may receive a pointer to that memory address or the address itself.\n\n\u003e [!info]+  \\* about memory address\n\u003e \n\u003e - Python is a bit more clever than this, so if you want to save the same value into different variables:\n\u003e \t- it will point to the same memory address, \n\u003e \t- but when you change one of those variables, if it is immutable, it will point to a different address\n\u003e - The variable will receive the memory address for an object(the value itself) for immutable types.\n\u003e - While for mutable types, it receives just the reference to that memory block. Changes are made to that single object stored in that address and referenced by one or more variables.\n\n\u003e [!attention]\n\u003e Sometimes mutable variables will extrapolate the scope on which they are defined without using the keyword 'Global.' \n\u003e Meaning: changes made to a variable inside the scope of a function will reflect on the variable outside said function\n\n## FAQ\n\n\u003e [!info]+ Can a mutable object be a member of an immutable object?\n\u003e \n\u003e Yes, but it can lead to some unexpected behavior. For example, tuples are immutable, but if a tuple contains a list (which is mutable), the list can be modified.\n\n\u003e [!info]+ How can I create a copy of a mutable object? \n\u003e \n\u003e You can use the copy module in Python to create a shallow or deep copy of a mutable object.\n\n## Further Reading\n\nIf you want to dive deeper into the topic, here are some resources:\n\n- [Python official documentation: Data Model]([Title](https://docs.python.org/3/reference/datamodel.html))\n- [Article: Python's Mutable vs Immutable Types: What's the Difference?]((https://realpython.com/python-mutable-vs-immutable-types/))\n\nRemember, the more you practice, the more these concepts become second nature. Keep exploring, Changesand happy coding!","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["python","data-engineering","coding"]},"/SQL-Tables":{"title":"SQL Tables","content":"# What are SQL Tables?\n\nAll [[_RDBMS]] uses the same principle to store data: A two-dimensional table consists of Data rows on the Horizontal Axis and strictly enforced column types on the Vertical Axis. \n\nThe Horizontal axis is an SQL row, and the Vertical axis is an [[SQL Column]].\n\nEach row represents a unique record, and each column represents a field in that record.\n\nFor instance, if you want to register all of your spending, we can create a table that contains the following:\n- Name of the Store \n- Name of the item\n- Cost of the item\n- Description\n\n\u003e All our examples will be focused on the SQLite3 database since it is one of the most straightforward and accessible to use.\n\n```SQL\nCREATE TABLE IF NOT EXISTS spendings (\n\tstore VARCHAR(64)\n\t, item VARCHAR(32)\n\t, price INTEGER\n\t, description VARCHAR(256)\n)\n```\n\n\u003e To understand more about column names and column types on SQL, check [[_SQL Data types]]\n\nSo our table ends up like this:\n| Store | Item | Price | Description |\n| ----- | ---- | ----- | ----------- |\n| x     | x    | x     | x           |\n\nThose are our columns, and we can input as many records as we want, for instance:\n\n```sql\nINSERT INTO spendings (store, item, price, description)\nVALUES ('Gamex', 'Xbox', 400,' Xbox console')\n```\n\nThat results in the following table:\n| Store     | Item        | Price | Description         |\n| --------- | ----------- | ----- | ------------------- |\n| Gamex     | Xbox        | 400   | Xbox console        |\n\n\u003e And we can keep adding data\n\n| Store     | Item        | Price | Description         |\n| --------- | ----------- | ----- | ------------------- |\n| Gamex     | Xbox        | 400   | Xbox console        |\n| Gamex     | FIFA 2023   | 60    | Xbox game           |\n| Groceries | Chocolate   | 5     |                     |\n| GameX     | PlayStation | 420   | Playstation console |\n| GameX     | FIFA 2023   | 60    | PS game                    |\n\nIt's not so bad, but we must include a few things in that table. How can we search for a single record? Is there anything that uniquely identifies one record? for every single record?\n\nAt this moment, there isn't, so almost every SQL table contains a particular column used to Identify a record called Primary Key or PK Uniquely. And we can create a column named ID as our Primary Key:\n\n```sql\nALTER TABLE spendings ADD COLUMN id INTEGER PRIMARY KEY AUTOINCREMENT\n```\n\n\u003e So our table would look like this:\n\n| ID  | Store     | Item        | Price | Description         | \n| --- | --------- | ----------- | ----- | ------------------- | \n|  1   | Gamex     | Xbox        | 400   | Xbox console        |\n|  2   | Gamex     | FIFA 2023   | 60    | Xbox game           |\n|  3   | Groceries | Chocolate   | 5     |                     |\n|  4   | GameX     | PlayStation | 420   | Playstation console |\n|  5   | GameX     | FIFA 2023   | 60    | PS game             |\n\nThe PK column can be of any type and can be manually or automatically created by the RDBMS. The only constraint is that it needs to be Unique. \n\n","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["data-engineering","coding","SQL"]},"/The-History-of-agile":{"title":"The History of agile","content":"## [The road to](http://agilemanifesto.org/history.html)\n\nIn the spring of 2000, a group of Leaders from the Software development and Management community gathered to discuss alternatives to the documentation-driven, heavyweight software development processes.\n\nThere were representatives from different perspectives like Extreme Programming, SCRUM, DSDM, Adaptive Software Development, Crystal, Feature-Driven Development, Pragmatic Programming, and others sympathetic to the need for change.\n\nAfter they realized that there was a common ground between those techniques and that it could be explored, they scheduled a new meeting. In February 2001, the meeting happened with the Original Signatories (most of whom are still big respectable names in the industry to this day), and they wrote the first draft of the Manifesto.\n\nAfter some exchanges, they changed the name from Lightweight to something more meaningful, reflecting their shared vision and showing what they were truly looking for in a more responsive, more [[Agile]] way to manage projects.\n\n## The Agile Manifesto\n\nWe are uncovering better ways of developing software by doing it and helping others do it. Through this work, we have come to value:\n\n### The Pillars\n\n\u003e [!EXAMPLE] Pillars\n\u003e\n\u003e - **Individuals and interactions** over processes and tools\n\u003e - **Working software** over comprehensive documentation\n\u003e - **Customer collaboration** over contract negotiation\n\u003e - **Responding to change** over following a plan\n\u003e\n\u003e That is, while there is value in the items on the right, we value the items on the left more.\n\n## The 12 Principles\n\nWe follow these principles:\n\n1. Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.\n2. Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.\n3. Deliver working software frequently, from a couple of weeks to a couple of months, with a preference for a shorter timescale.\n4. Business people and developers must work together daily throughout the project.\n5. Build projects around motivated individuals. Give them the environment and support they need, and trust them to do the job.\n6. Face-to-face conversation is The most efficient and effective method of conveying information to and within a development team.\n7. Working software is the primary measure of progress.\n8. Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.\n9. Continuous attention to technical excellence and good design enhances agility.\n10. Simplicity--the art of maximizing the amount of work not done--is essential.\n11. The best architectures, requirements, and designs emerge from self-organizing teams.\n12. At regular intervals, the team reflects on becoming more effective, then tunes and adjusts its behavior accordingly.\n\n## The road since\n\nEven though it was initially planned for and by software developers, the core principles and their applications have proven beneficial in countless other contexts.\nAnd as time passed, people tried different experiments and applications and got increasingly better results. Therefore, Agile has long surpassed software development and has become a valuable tool in project management.\n","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["agile","agile-foundations"]},"/Time-The-Great-Equalizer":{"title":"Time - The Great Equalizer","content":"## Time: The Great Equalizer\n### Understanding the Universality of Time\n- **A Universal Truth**: It's a fundamental fact of life that every person, regardless of their background, location, or circumstances, is allocated the same 24 hours in a day. This uniform time distribution is one of the few constants in our diverse and ever-changing world.\n\n### The Impact of Time on Daily Life\n- **Daily Decisions**: From the moment we wake up to when we go to sleep, how we spend each minute shapes our lives. Whether dedicating hours to work, spending time with family, engaging in hobbies, or resting, these choices define our personal and professional lives.\n\n### Time as a Resource\n- **A Precious Commodity**: Time may be our most precious resource. Unlike money, materials, or energy, time is irreplaceable and non-renewable. Once a moment passes, it's gone forever, making how we use our time incredibly significant.\n\n### The Equality of Time\n- **An Equalizer Among People**: Time brings a sense of equality. No matter who you are ‚Äì a CEO, an artist, a student, or a stay-at-home parent ‚Äì you are bound by the same time constraints as everyone else. This shared experience fundamentally connects us all.\n\n### Making the Most of Our Time\n- **Quality Over Quantity**: It's not just about how much time we have but how we use it. Quality time can lead to more productive work, deeper relationships, and greater fulfillment. It's about prioritizing what truly matters and making conscious choices to enrich our lives.\n\n### Time Management: A Key to Success\n- **Balancing Act**: Effective time management is crucial for success in any area of life. It involves planning, prioritizing, and making smart choices about how to allocate our time. Good time management can lead to increased productivity, reduced stress, and a better quality of life.\n\n### The Role of Time in Achieving Goals\n- **Setting Priorities**: By understanding the value of time, we can set priorities that align with our goals and values. This might mean allocating specific hours for focused work, carving out time for health and exercise, or ensuring we have moments of relaxation and leisure.\n\n### Reflecting on Time Usage\n- **A Tool for Self-Reflection**: Regularly reflecting on how we spend our time can provide valuable insights into our habits, preferences, and priorities. It can help us adjust to ensure our time aligns with our long-term objectives and personal well-being.\n\n### Time in the Broader Context\n- **A Universal Challenge**: The challenge of best using time is universal across cultures and societies. It's a topic that has fascinated philosophers, scientists, and thinkers for centuries and continues to be a central question in our fast-paced, modern world.\n\n\u003e By recognizing time as the great equalizer and learning to use it wisely, we can lead more productive, fulfilling, and balanced lives. The way we choose to spend our time not only defines our daily experiences but also shapes our future and our legacy.","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["agile","agile-foundations","project-management","productivity"]},"/Untitled":{"title":"Untitled","content":"","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":[]},"/What-is-management-overload":{"title":"What is management overload?","content":"\n## The Question Simplified\n\n- **What We're Asking**: Can there be too much management in a project? It sounds unlikely, but let's explore why the answer might be \"Yes.\"\n\n## Management: A Balancing Act\n\n- **The Basic Idea**: Think of management like seasoning a dish. Just the right amount enhances the flavor, but too much can ruin it. Similarly, the right amount of management improves a project, but too much can hinder progress.\n\n### Understanding Scarcity and Opportunity Cost\n\n- **Scarcity**: Imagine you only have a limited amount of your favorite snack. You'd choose carefully when to eat it, right? That's scarcity - finite resources.\n- **Opportunity Cost**: If you spend an hour watching TV, you lose an hour you could have spent reading. That's opportunity cost - the cost of choosing one thing over another.\n\n### [[Time - The Great Equalizer]]\n\n- **A Universal Truth**: Everyone has the same 24 hours in a day. How we use this time makes all the difference.\n\n### Management vs. Time: The Tradeoff\n\n- **Real-Life Example**: Consider a weekly team meeting. It's essential, but it also takes time away from actual work. That's the tradeoff - time spent managing vs. time spent doing.\n\n## The Risk of Over-Managing\n\n- **A Clear Picture**: Imagine a team spending more time reporting on their work than actually doing it. This is where management becomes excessive and counterproductive.\n\n### The Need for Balanced Management\n\n- **Why It Matters**: Too little management leads to chaos, but too much can stifle productivity. The key is finding the right balance.\n\n## Agile Methodology: A Solution\n\n- **Agile Approach**: Agile methods emphasize flexibility and efficiency. They focus on doing more with less management, leading to better results.\n- **Success Stories**: Many companies have seen remarkable improvements by adopting agile practices, from faster project completion to higher team morale.\n\n### Addressing Concerns\n\n- **Common Misconception**: Some think agile means no management. That's not true. It's about more thoughtful, not less, management.\n\n### Visualizing Agile Success\n\n- **Charts and Graphs**: Visual aids can show how agile methods lead to increased productivity and better time management.\n\n## Your Next Steps\n\n\u003e Consider exploring agile methodologies for your team. See how a balanced approach to management can transform your projects and boost efficiency.\n\u003e \n\u003e Adopting a more agile approach can maximize your team's time and talents, leading to greater project success and satisfaction.","lastmodified":"2025-03-05T17:06:10.686131019Z","tags":["agile","project-management"]},"/_5-Common-mistakes-when-starting-a-Agile-Project":{"title":"5 Common mistakes when starting a Agile Project","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Accountability":{"title":"Accountability","content":"# What is\n\n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Agile-metrics":{"title":"Agile metrics","content":"## RASCUNHO\n\nO processo de tomada de decis√£o precisa, em sua entrada, de informa√ß√µes. Informa√ß√µes que s√£o recolhidas atrav√©s de estudos, an√°lises e medidas. Por isso medir √© importante, ao tomar uma decis√£o o gestor precisa saber o tamanho e o impacto dessa decis√£o. Conforme exemplificado na hist√≥ria a seguir:\n\n\u003e ‚Äú Dois mil anos atr√°s, na Magna Gr√©cia, um rei encomenda uma coroa de ouro a um ourives, e fornece ouro para que ele a fundisse. O ourives entrega ao rei a sua desejada coroa, o rei segura a coroa e desconfia de que tenha algo errado, o rei n√£o tem certeza se o ourives tinha utilizado todo o ouro que tinha lhe o oferecido.\n\n\u003e Para ter certeza de que n√£o foi roubado, o rei ordena que pesasse a coroa, por√©m a coroa estava exatamente com o mesmo peso. Ele pensa em quebrar a coroa mas se ele estivesse errado, ele estaria demonstrando fraqueza, mas se ele n√£o quebrasse tamb√©m estaria mostrando sinal de fraqueza porque poderia estar sendo enganado.\n\n\u003e Se o ourives estivesse enganando o rei, ele iria mandar mat√°-lo, e se n√£o estivesse enganando, iria prestigi√°-lo.\n\n\u003e Ent√£o o rei manda chamar o Arquimedes (inventor e matem√°tico) para esclarecer sua d√∫vida. Arquimedes n√£o tinha uma solu√ß√£o pronta para o problema, e fica dias e dias pensando. Um dia, quando se preparava para o banho, encheu a banheira, e distra√≠do, entrou nela, certa quantidade de √°gua transbordou, ele ficou olhando a √°gua que transbordava e der repente saiu da banheira pelado e saiu correndo gritando ‚ÄúEureca!‚Äù.\n\n\u003e Diante do rei, Arquimedes pega um copo de √°gua e mergulha a coroa, verifica a quantidade de √°gua que transbordou, faz o mesmo processo com uma barra de ouro, e outra de prata.\n\n\u003e O resultado √© que quando ele mergulha a coroa, sai mais √°gua do que quando ele mergulha a barra de ouro, e menos do que quando mergulha a barra de prata.\n\n\u003e Conclus√£o: ap√≥s Arquimedes medir a coroa, ele chega a conclus√£o que a mesma foi feita por uma mistura de ouro e prata, e com isso, o Rei consegue tomar uma decis√£o sobre o que fazer com o Ourives.‚Äù\n\n# Medir o que ser√° medido?\n\nA informa√ß√£o √© parte crucial da tomada de decis√£o, por√©m buscar essa informa√ß√£o envolve outra parte muito importante: Custos.\n\nExiste um custo ao buscar informa√ß√£o e por isso o gestor muitas vezes se encontra em um dilema: ‚ÄúGastar mais para ter mais informa√ß√µes ou tomar a decis√£o com a informa√ß√£o atual sem precisar gastar mais dinheiro?‚Äù.\n\nPara auxiliar o gestor existem algumas perguntas que ele pode fazer:\n\n-   O porqu√™ de eu estar medindo?\n-   Qual decis√£o eu vou tomar?\n-   O que eu ganho com cada decis√£o?\n-   Qual o ganho eu vou ter ao coletar mais informa√ß√£o?\n\nUma forma de pensar nisso √© atrav√©s de medidas simples de espa√ßo, como por exemplo:\n\n\u003e Um campo de futebol, [definido pela CBF](http://globoesporte.globo.com/futebol/noticia/2016/01/tudo-igual-dentro-das-4-linhas-cbf-padroniza-gramados-das-series-e-b.html), possui as seguintes dimens√µes: 105m x 68m. No caso do campo de futebol n√£o existe necessidade de verificar com precis√£o se o campo est√° 5 cent√≠metros maior ou menor, j√° que √© um valor muito pequeno comparado aos 105 metros do campo.\n\n\u003e J√° para a produ√ß√£o de um cateter uma diferen√ßa de 5 mil√≠metros (1 d√©cimo da diferen√ßa anterior) pode ser a diferen√ßa entre a vida e a morte de um paciente.\n\nO que os exemplos buscam mostrar √© que nem toda medi√ß√£o √© relevante, assim como [nem toda medi√ß√£o √© trivial de se medir](https://www.youtube.com/watch?v=T-xMCFOwllE). Algumas vezes medir custa mais caro do que o benef√≠cio da medi√ß√£o trar√° para o projeto.\n\n# Valor da informa√ß√£o\n\n‚ÄúToda informa√ß√£o tem valor! Mesmo informa√ß√µes pouco precisas.‚Äù\n\nToda informa√ß√£o tem valor! Mesmo informa√ß√µes pouco precisas. Uma pessoa n√£o precisa saber a quantidade de carros para entender que uma via est√° engarrafada.\n\nMedir √© reduzir incerteza! Por isso essa s√£o algumas das necessidades e resultados ao medir:\n\n-   Quebrar a incerteza em incertezas menores;\n-   Nem sempre a certeza √© uma necessidade;\n-   Nem toda medida requer precis√£o;\n-   A m√©trica serve para fornecer uma no√ß√£o da realidade;\n-   Deve-se medir at√© atingir um grau aceit√°vel de incerteza.\n\n# M√©tricas\n\nTr√™s ‚ÄúA‚Äôs‚Äù para avaliar uma m√©trica:\n\n**A**cion√°vel: Possui uma causa e um efeito, um gatilho.\n\n**A**cess√≠vel: Est√° vis√≠vel e √© compreens√≠vel.\n\n**A**udit√°vel: √â poss√≠vel validar a confian√ßa e validade do que foi medido.\n\n\u003e As m√©tricas s√£o voltadas para equipe, e n√£o para um √∫nico indiv√≠duo.\n\n## Relacionadas a qualidade da entrega\n\n-   N√∫mero de Bugs.\n-   N√∫mero de usu√°rios.\n-   Tempo de uptime do servidor.\n-   N√∫mero m√©dio de linhas por fun√ß√£o.\n-   Cobertura dos testes automatizados.\n\nA m√©trica t√©cnica √© responsabilidade do time!\n\n## Lembrar que m√©tricas\n\n-   Ajudam a tomar decis√µes.\n-   Possuem um custo para serem medidas.\n-   Devem ter como base os ganhos esperados!\n-   √â preciso saber quais os limites das m√©tricas?\n-   Quem s√£o os respons√°veis?\n-   As m√©tricas t√©cnicas ajudam a melhorar a qualidade do que ser√° executado.\n-   Ajudam a fazer o sistema de prioriza√ß√£o de tarefas.\n-   S√£o relativas √† equipe t√©cnica que est√° trabalhando em determinado produto ou projeto, tendo um check-list de: poss√≠veis decis√µes, custo da medi√ß√£o e ganhos esperados.\n-   Importante que o pr√≥prio time seja o respons√°vel pela defini√ß√£o dessas m√©tricas.\n-   Elas gerar√£o insights sobre o trabalho de alguma equipe, como, por exemplo, a qualidade do que √© executado.\n\n## M√©tricas de neg√≥cios\n\n![](https://miro.medium.com/max/60/1*dQaWouHCsf3mQGwx5KfexQ.jpeg?q=20)\n\nTem como objetivo maximizar o valor entregue. √â melhor entregar poucas funcionalidades com alto valor do que entregar muitas funcionalidades com baixo valor.\n\nExistem diversos fatores pelos quais podemos medir m√©tricas de neg√≥cio:\n\n-   Indice de satisfa√ß√£o;\n-   Ticket m√©dio;\n-   Taxa de convers√£o;\n-   ROI;\n-   Etc.\n\n\u003e As m√©tricas devem ser analisadas, verificadas e utilizadas.\n\n## Exemplo de m√©tricas de neg√≥cio\n\n1.  Rotatividade dos funcion√°rios;\n2.  Happiness index + (Hashtags para explicar);\n3.  Squad Health check.\n\n## M√©tricas de motiva√ß√£o\n\nS√£o m√©tricas focadas na motiva√ß√£o das pessoas. Ajudam a medir a maturidade da agilidade dentro do ambiente. Tem como principal problema serem muito abstratas.\n\nA motiva√ß√£o, conforme visto anteriormente, possui 3 pilares fundamentais (APM):\n\n**M**aestria: _quanto mais o colaborador se torna melhor naquilo que faz, mais motivado ele fica. (Ver: Flow state)_\n\n**A**utonomia: _as pessoas tem a autonomia de resolver problemas_.\n\n**P**rop√≥sito: _o trabalho executado ir√° gerar um benef√≠cio maior posteriormente._\n\nOutra forma interessante √© atrav√©s do MVV (Miss√£o, Vis√£o e Valores) pois ajuda com que os colaboradores se identifiquem com a empresa e saibam que ambos est√£o buscando o mesmo objetivo.\n\n## M√©tricas de efici√™ncia\n\n1.  Cycle time (Quanto tempo para entrega)\n2.  Lead time (Quanto tempo uma atividade demora para sair do in√≠cio ao fim)\n3.  W.I.P. (Work in progress)\n4.  Tempo de espera\n5.  Undone Work\n\nImportante sempre dar Visibilidade!\n\n## Como validar uma boa m√©trica\n\n-   As m√©tricas s√£o focadas na equipe! N√£o em pessoas.\n-   O grupo deve ter autonomia para definir suas m√©tricas!\n-   M√©tricas s√£o material para refletir de tempos em tempos!\n\n# Estimativas\n\nComponentes de uma estimativa:\n\n1.  Esfor√ßo;\n2.  Complexidade;\n3.  Incerteza (maior intervalo ou menor confian√ßa).\n\n## Lembre-se\n\n-   A compara√ß√£o deve ser feita entre coisas e n√£o pessoas.\n-   A diversidade √© importante, mais pessoas = mais possibilidades.\n-   O debate ajuda a uma maior antecipa√ß√£o de problemas.\n-   N√£o existe estimativa precisa;\n-   Uma estimativa s√≥ √© importante se ela afetar uma decis√£o;\n-   Se a decis√£o j√° est√° tomada n√£o tem necessidade de estimativa;\n-   Estimativas devem ser intervalos;\n-   Estimativas devem ter grau de confian√ßa;\n-   Estimativas devem ser acompanhadas de medi√ß√µes e corre√ß√µes para os pr√≥ximos fatores;\n-   Estimativa deve saber o que √© Ready/Done!\n\n# Business Value\n\nQual o valor de neg√≥cio de uma hist√≥ria de usu√°rio?\n\n# NoEstimates!\n\n-   Qual o valor da estimativa?\n-   Foco em responder √†s mudan√ßas; e\n-   Coopera√ß√£o com o cliente.\n\nMoney for nothing -\u003e O cliente pode cancelar o resto do projeto a qualquer momento.\n\nChanges for free -\u003e O cliente pode a qualquer momento solicitar que uma funcionalidade saia para que outra entre.\n\nFoco em **Kaizen**","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Anecdotal-evidence":{"title":"Anecdotal evidence","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Antifragile":{"title":"Antifragile","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_BigO-notation":{"title":"_BigO notation","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["ComputerScience"]},"/_Building-a-simple-help-desk-with-python-and-slack":{"title":"_Building a simple help desk with python and slack","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[]},"/_Can-I-merge-Traditional-PM-and-Agile-PM":{"title":"Can I merge Traditional PM and Agile PM?","content":"Este √© outro questionamento muito comum, principalmente no Brasil. Ao mesmo tempo que empresas e autarquias p√∫blicas est√£o tendo um avan√ßo significativo no uso das metodologias √°geis, por se tratarem de √≥rg√£os governamentais, s√£o obrigados a cumprir uma s√©rie de procedimentos e burocracias inerentes a exist√™ncia do Estado.\n\nPor√©m, mesmo em locais extremamente burocr√°ticos e engessados por for√ßa de lei, podem tirar proveito de ferramentas e de alguns m√©todos √°geis para atingir com maior garantia os objetivos, principalmente ao introduzir nas equipes a [cultura √°gil](http://localhost:2368/cultura-agil/) de buscar resultados, o _[kaizen](http://localhost:2368/kaizen-melhoria-continua/)_, os [radiadores de informa√ß√µes](http://localhost:2368/radiadores-de-informacao/) e etc.\n\nNovamente, para responder √† pergunta, sim, √© poss√≠vel utilizar √°gil em ambientes tradicionais, nem sempre por completo, mas para incluir novas ferramentas no cinto dos gestores e das equipes que buscam entregar o melhor resultado!","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","project-management"]},"/_Clang-Graphs":{"title":"_Clang - Graphs","content":"#clang #data-engineering #ComputerScience \n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["clang","ComputerScience","data-engineering"]},"/_Clang-Hash-Tables":{"title":"_Clang - Hash Tables","content":"#clang #data-engineering #ComputerScience \n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["clang","ComputerScience","data-engineering"]},"/_Clang-linked-lists":{"title":"_Clang - linked lists","content":"#clang #data-engineering #ComputerScience ","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["ComputerScience","data-engineering","clang"]},"/_Clang-queues":{"title":"_Clang - queues","content":"#clang #data-engineering #ComputerScience ","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["clang","ComputerScience","data-engineering"]},"/_Clang-stacks":{"title":"_Clang - stacks","content":"#clang #data-engineering #ComputerScience \n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["clang","ComputerScience","data-engineering"]},"/_Clang-trees":{"title":"_Clang - trees","content":"#clang #data-engineering #ComputerScience \n\n## Types of Trees\n### [[Binary Search Tree]]\n- Each node has at most 2 children\n- The left child is less than the parent\n- The right child is greater than the parent\n- No duplicates\n### [[AVL Tree]]\n- Self-balancing binary search tree\n- The height of left and right subtrees of any node differ by at most 1\n- Insertion and deletion operations may cause the tree to become unbalanced\n### [[Red-Black Tree]]\n- Self-balancing binary search tree\n- Each node is either red or black\n- The root node is always black\n- New nodes are always red\n- No two adjacent red nodes\n- Every path from a node to a null node has the same number of black nodes\n### [[Balanced-Tree (B-tree)]]\n- Self-balancing tree\n- Each node can have more than 2 children\n- Used in databases and file systems\n- Each node contains a list of keys and a list of children\n- Keys are sorted in ascending order\n- Keys in the left child are less than the keys in the parent node\n- Keys in the right child are greater than the keys in the parent node\n- All leaves are at the same level\n### [[B+ Tree]]\n- Self-balancing tree\n- Each node can have more than 2 children\n- Used in databases and file systems\n- Each node contains a list of keys and a list of children\n- Keys are sorted in ascending order\n- Keys in the left child are less than or equal to the keys in the parent node\n- Keys in the right child are greater than the keys in the parent node\n- All leaves are at the same level\n- All keys are present in the leaf nodes\n- Leaf nodes are linked together\n### [[Splay Tree]]\n- Self-balancing binary search tree\n- Recently accessed nodes are moved closer to the root\n- Used in caches and memory allocators","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["clang","ComputerScience","data-engineering"]},"/_Code-Standards":{"title":"Code Standards","content":"#coding  #data-engineering ","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["coding","data-engineering"]},"/_Delegation-Poker":{"title":"Delegation Poker","content":"O Delegation Poker √© uma ferramenta do Management 3.0 que auxilia a mapear o proceso de tomada de decis√£o em determinada circunst√¢ncia na empresa. S√£o 7 n√≠veis poss√≠veis, representados em ordem a seguir:\n\n-   Ordem (Eu decido e ponto);\n-   Venda (Eu decido, mas explico);\n-   Consulta (Eu escuto, mas a decis√£o √© minha);\n-   Consenso (Todos tomam decis√£o em conjunto);\n-   Conselho (Eu entrego o poder de decis√£o, mas aconselho);\n-   Informa√ß√£o (Eu entrego a decis√£o, mas quero que me comuniquem a decis√£o);\n-   Delega√ß√£o (A decis√£o √© de voc√™s e os resultados tamb√©m).\n\n√â poss√≠vel revelar para onde o projeto est√° indo e o porqu√™ atrav√©s de 3 perguntas:\n\n-   Que objetivo o projeto deve atingir?\n-   Por que esse projeto agregar√° valor?\n-   Como medir se o projeto foi bem sucedido?","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Extract-data-from-MongoDB-using-python":{"title":"_Extract data from MongoDB using python","content":"#data-engineering #python #pandas #mongodb \n# The problem\nIn the company, I'm currently working for, I was tasked to create a pipeline to bring data from MongoDB to our DataLake. Searching online for some tutorials or help, but found nothing really useful. Every tutorial or article treats MongoDB as somewhat of a SQL database. Everything is well structured, every record possesses the same fields and all is good.\n\nThe problem is that working with a MongoDB that really is used, we found a lot of things that aren't all sunshine and rainbows. Data is somewhat unstructured, there is a lot of garbage in data, and even some truly macaronic architecture that has an array of jsons with arrays, the true definition of a rat's nest.\n\nAnd that's why I decided to document everything I needed to do when working with real-world data, and a not-so-perfect architecture and database.\n\n## First things first\nOur data stack is composed by:\n- Airflow\n- Python and its libraries\n- Snowflake\n- AWS S3\n- DBT\n- MongoDB (of course)\n\n## The quick and dirty solution\nIn order to get the pipeline running as fast as possible, we decided to start by grabbing data from MongoDB using Pymongo, and sending it to AWS S3 as a JSON file. Once there, we would read the files using Snowflake's external file capabilities, and use Plain SQL to load data into tables.\n\n\u003e The following code is not complete and is used only as an example.\n\n```python\nimport pymongo\nfrom datetime import datetime\nfrom bson import decode_all\nfrom bson.json_util import dumps\n\ndef get_mongo_data(\n\tagg_clause: str,\n\tbucket_name: str, \n\tcollection: str,\n\tconnection_string: str,\n\tdatabase_name: str,\n\tlast_date: datetime,\n\tmongo_filter: list):\n\t'''\n\tGet the delta of data from MongoDB\n\tThis code is not complete, since it calls for functions that are not implemented.\n\t'''\n\t# Get MongoDB Cursor\n\tmongo_client = pymongo.MongoClient(connection_string)\n\tdb = mongo_client[database_name]\n\tfilter_condition = get_filter_condition(agg_clause, mongo_filter, last_date)\n\tcursor = db[collection]. aggregate_raw_batches(\n\t\t\t[\n\t\t\t\t{'$match': condition},\n\t\t\t\tagg_clause,\n\t\t\t]\n\t\t)\n\t# Get boto3 connection to s3\n\tboto3_sesion = get_connection()\n\ts3_client = boto3_session.client('s3')\n\n\tfile_count = 0\n\n\t# Get batches from the cursor\n\tfor batch in cursor:\n\t\tfile_count += 1\n\t\tfile_path = 'stage/year/month/day/hour'\n\t\tresult = dumps(decode_all(batch))\n\t\ts3_client.put_object(Bucket=bucket_name, Key=file_path, Body=result)\n\n\tmongo_client.close()\n\n```\n\nSo the code above gets batches of data from Mongo, dumps it into a JSON, and sends it to an S3 Bucket. From there we can access the data in Snowflake and use some functions to load the data. Something like:\n\n```SQL\nCREATE TABLE IF NOT EXISTS database.raw_schema.table AS(\n\tSELECT\n\t-- I'm breaking down the lines to be a little easier to understand what is happening\n\t\tTRY_PARSE_JSON(\n\t\t\treplace(\n\t\t\t\tGET_IGNORE_CASE($1, 'id'), '$')):oid::text as id\n\t\t,TRY_PARSE_JSON(\n\t\t\treplace(\n\t\t\t\tGET_IGNORE_CASE($1, 'date_field'), '$')):date::DATETIME as _date\n\t\t-- ...\n\tFROM\n\t\t@stage/path/to/file (file_format =\u003e json_array)\n);\n\n```\n\u003e Note: please do not use CREATE OR REPLACE TABLE see [[98% Economy on Data Lake]] for context\n\n\u003e After that, all you need to do is start merging the new data into this table. Using COPY INTO or MERGE functions on Snowflake.\n\n### Pros\n- Fast way to get you going\n- You don't need to deal with the data in Python\n### Cons\n- Double or Triple the cost of storage\n\t- Snowflake (external stage and internal stage) and S3.\n- Put the processing cost into Snowflake (which can be expensive if not careful)\n- If anything changes in MongoDB you need to manually change the SQL that creates and updates the raw table.\n\n\u003e If your data is mostly unmutable, and well structured, this can do the trick, but what happens when developers use to the fullest the not typing of data in Mongo? \n\n# Making it a little more future proof\n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["data-engineering","python","pandas","mongodb"]},"/_Feedback":{"title":"Feedback","content":"Feedback significa ‚Äúretroalimenta√ß√£o‚Äù e tem como objetivo coletar informa√ß√µes, observa√ß√µes, falhas e possibilitar melhorias no servi√ßo, processo ou produto que est√° sendo trabalhado.\n\n_‚ÄúTer um retorno do que foi entregue ao cliente.‚Äù_\n\nO feedback pode criar novos requisitos, melhorias e trazer mudan√ßas na experi√™ncia. Com isso cria-se um ciclo:\n\n-   Priorizar;\n-   Desenvolver;\n-   Coletar informa√ß√µes (feedback);\n-   Re-priorizar;\n-   Voltar ao passo 2.\n\n_**O projeto √© din√¢mico!!**_\n\nO feedback √© importante n√£o apenas para ajudar a equipe a se adaptar as mudan√ßas do projeto, e aumentar o valor sendo entregue. Esse retorno √© fundamental ao delegar fun√ß√µes e repassar responsabilidades, oferecendo chances de melhorias para o time.\n\n_Delegar sem feedback √© o mesmo que jogar uma pessoa no meio de uma selva, sem equipamentos, sem dire√ß√£o e esperar que ela consiga sair viva de l√°!_\n\nContudo, n√£o √© f√°cil passar ou receber feedbacks se o mindset estiver errado, ou com a cultura errada na cabe√ßa. Deve-se ter em mente que:\n\n-   As pessoas tem dificuldade em passar feedbacks.\n-   Dar e pedir feedback √© extremamente importante.\n-   √â uma forma de ajudar a tra√ßar planos de melhoria.\n-   Feedback deve ser rico, e n√£o extenso.\n-   O objetivo √© a melhoria cont√≠nua (Kaizen).\n-   N√£o existem culpados.\n-   Errar r√°pido e se adaptar.\n-   Usar a **Comunica√ß√£o n√£o-violenta.**\n-   Come√ßar pelo lado positivo.\n-   ‚ÄúPerguntas poderosas‚Äù (essas v√™m do coaching, mas basta adotar uma postura socr√°tica frente ao feedback e internaliz√°-los com uma mentalidade positiva, visando melhorias)\n\nFeedback gera conhecimento e ajuda na evolu√ß√£o das pessoas ao gerar um incentivo para que elas criem consci√™ncia quanto aos erros e acertos e busquem melhorias, visando alcan√ßar a compet√™ncia.\n\nPara isso, o feedback precisa ser dado com cuidado. Contextualiza√ß√£o, fatos, valores e ‚Äú[perguntas poderosas](https://administradores.com.br/artigos/perguntas-poderosas)‚Äù precisam sempre ser levados em considera√ß√£o na hora de darretorno para algu√©m.\n\n_Manter o foco em situa√ß√µes, atitudes e casos, n√£o em pessoas._","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","tools"]},"/_Git":{"title":"Git","content":"## Os comandos B√°sicos de GIT\n\n- GIT INIT- GIT CLONE- GIT PULL- GIT ADD- GIT COMMIT- GIT PUSH- GIT MERGE\n\n## O QUE √â GIT?\n\nGit √© um sistema de controle de vers√µes. Ele guarda as mudan√ßas realizadas em um conjunto de arquivos ao longo do tempo, de modo que voc√™ possa retornar a uma vers√£o espec√≠fica depois.Existem outros version control systems (VCS) que trabalham ¬†armazenando as altera√ß√µes realizadas nos arquivos como em um log.O Git trabalha de uma maneira diferente, O git trata os dados como uma s√©rie de snapshots de um mini sistema de arquivos, Com o git, todas as vezes que voc√™ commita ou salva o estado do seu projeto, O git basicamente tira uma foto de como todos os seus arquivos est√£o naquele momento e cria uma refer√™ncia para essa foto.Por uma quest√£o de efici√™ncia, caso n√£o hajam mudan√ßas em um arquivo, o git cria um link para o ultimo estado id√™ntico que j√° est√° armazenado. Ou seja o Git trata os dados como um fluxo de snapshots.Um outro ponto importante para o Git √© o fato de ele trabalhar de maneira distribuida, ou seja, todas as m√°quinas que fazem um \"Git clone\" (Falar dele mais pra frente) possuem todo o hist√≥rico do projeto, sendo assim a maior parte do trabalho √© realizado de maneira local, evitando problemas de rede, lat√™ncia e etc. As informa√ß√µes s√£o enviadas para o servidor origem (ou ÀúoriginÀú) quando utilizamos o comando Git Push.Git tamb√©m possui integridade, uma vez que tudo possui um checksum o que torna imposs√≠vel alterar algum arquivo ou diret√≥rio sem o git perceber essas diferen√ßas.Esses checksum s√°o hashs de 40 caracteres que s√°o muito utilizados mas sua principal aplica√ß√£o √© nos commits: ex: commit 1f3ef05ec4367b34802b6e0d45487322cf7f7367O git basicamente apenas realiza opera√ß√µes de adi√ß√£o de informa√ß√µes sendo quase imposs√≠vel perder um dado ap√≥s ele ter sido \"commitado\".\n\nIMPORTANTEOs arquivos no GIT possuem 3 estados principais:- modified - Significa que existem mudan√ßas mas ainda n√£o foram armazenadas na sua database local- staged - Significa que voc√™ marcou o arquivo em sua vers√£o atual para ser adicionado a pr√≥ximo snapshot (commit)- commited - Significa que est√° armazenado seguramente na sua base de dados LOCAL.- COMO CONSEGUIR AJUDA COM O GIT$ git help \u003cverb\u003e$ git \u003cverb\u003e --help$ man git-\u003cverb\u003e- GIT BASICS- - INICIANDO UM REPOSIT√ìRIO [GIT] - - Criar uma pasta para o projetoO que s√£o branchs? e como trocar de branch?[OFF]Como fazer cherrypicking?[OFF]Diferen√ßa entre Rebase e Merge[OFF]O que √© stage?Pull/Push Request","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Git-vs-Github-flows-what-are-the-pros-and-cons":{"title":"_Git vs Github flows what are the pros and cons","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[]},"/_How-to-define-Goals":{"title":"How to define Goals","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Indicators":{"title":"Indicators","content":"Indicador √© um dado quantitativo e geralmente representado por um √≠ndice, correspondente ao aspecto ou caracter√≠stica de um determinado objeto mensur√°vel em quantidade, grandeza, intensidade, cumprimento, tempo etc.\n\nUma outra poss√≠vel defini√ß√£o de Martins e Marini (2010): O indicador √© definido como formas de representa√ß√£o quantific√°veis de caracter√≠sticas de produtos/servi√ßos ou processos, utilizadas para acompanhar e melhorar os resultados ao longo do tempo. Os indicadores s√£o compostos por 6 atributos:\n\n-   Nome: √â a forma como o indicador ser√° conhecido;\n-   Medida: Rela√ß√£o matem√°tica, grandeza qualitativa ou quantitativa que permite classificar as caracter√≠sticas, resultados e consequ√™ncias dos produtos, processos ou sistemas;\n-   √çndice: Valor do indicador, valor real e mensur√°vel do indicador em um determinado momento;\n-   F√≥rmula: Valor num√©rico, a forma como o indicador √© obtido (a maneira de se obter o √≠ndice);\n-   Metas: √çndices atribu√≠dos para os indicadores, valores a serem alcan√ßados num determinado per√≠odo de tempo. S√£o pontos ou posi√ß√µes a serem atingidos no futuro;\n-   Polaridade: Revela a orienta√ß√£o a ser seguida pelo analista do indicador (ex: Maior Melhor).","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","agile-foundations","project-management"]},"/_Information-Radiators":{"title":"Information Radiators","content":"Os radiadores de informa√ß√£o s√£o ferramentas que ajudem a disseminar dados entre a equipe e os stakeholders. Al√©m disso, s√£o o oposto dos ‚Äúcongeladores de informa√ß√£o‚Äù, como por exemplo, uma tabela Excel a qual s√≥ uma pessoa tem acesso e sabe do que se trata.\n\nExistem diversos tipos de radiadores, mas em geral eles possuem algumas caracter√≠sticas em comum:\n\n-   S√£o visuais;\n-   F√°ceis de entender;\n-   Ficam em locais de f√°cil acesso e visualiza√ß√£o;\n-   S√£o trabalhados por todos na equipe.\n\nAlguns exemplos de Radiadores de Informa√ß√£o:\n\n-   Quadros Kanban;\n-   An√°lise SWOT;\n-   Matriz de responsabilidades;\n-   Hist√≥rias de usu√°rios;\n-   Mood marbles;\n-   Product Box;\n-   Quadro de metas;\n-   Entre tantos outros.\n\nEntre muitas fun√ß√µes e vantagens de utilizar esses radiadores de informa√ß√£o podemos listar:\n\n-   Aumenta o n√≠vel de inspe√ß√£o e transpar√™ncia do trabalho em equipe;\n-   Evita interrup√ß√µes desnecess√°rias (Tendo em vista que para saber o que a equipe est√° trabalhando basta olhar para o Radiador sem ter que interromper o trabalho de algum dos membros da equipe para perguntar);\n-   Reduz a quantidade de reuni√µes, j√° que as informa√ß√µes s√£o trocadas atrav√©s do quadro onde todos tem acesso a toda a informa√ß√£o;\n-   Facilita a gest√£o de trabalho e de prazos, basta olhar para o seu radiador para poder estimar se o projeto est√° no prazo, adiantado ou atrasado;\n-   Aumenta o senso de responsabilidade e cumprimento de objetivos na equipe, uma vez que seu trabalho pode ser inspecionado por todos a todos os momentos.\n\nImportante ressaltar tamb√©m que voc√™ n√£o precisa escolher apenas um radiador de informa√ß√£o para utilizar nos seus projetos, assim como tamb√©m n√£o precisa escolher os que foram listados aqui. O mais importante √© oferecer a equipe um local de f√°cil acesso para gest√£o de trabalho.","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","tools"]},"/_Kaizen":{"title":"Kaizen","content":"Muitas das t√©cnicas e ferramentas √°geis surgiram no Jap√£o, exemplo disso √© o sistema de produ√ß√£o criado pela Toyota ap√≥s a Segunda Guerra Mundial. Esses m√©todos foram trazidos para o ocidente depois que engenheiros ocidentais realizaram visitas a f√°bricas japonesas, motivo pelo qual algumas ferramentas s√£o nomeadas com palavras da l√≠ngua japonesa.\n\nKaizen, em japon√™s, significa ‚Äúmelhoria‚Äù, mas foi ressignificado no ocidente como: ‚Äúmelhoria cont√≠nua‚Äù. √â importante lembrar que Kaizen √© algo mais pr√≥ximo a um mindset, um valor, j√° que prega que se deve focar nas pequenas mudan√ßas, na melhoria constante de processos e produtos e em uma cultura que valorize quem reporta um erro ao inv√©s de puni-lo.\n\n_N√£o punir as pessoas por falhas. N√£o punir as pessoas por reportar as falhas. Recompensar quem falha tentando melhorar!_\n\nAo criar uma cultura onde as pessoas reportam os erros, onde todos os envolvidos se preocupam em corrigir e melhorar os processos ao inv√©s de sentir medo de ser punido ou receber a culpa por um erro, permitimos a orgnaiza√ß√£o se tornar cada vez melhor. Atingindo resultados melhores, evitando desperd√≠cios e principalmente mantendo os colaboradores motivados e trabalhando dentro de um estado de confian√ßa e inova√ß√£o.","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Kanban":{"title":"Kanban 101","content":"O Kanban √© um m√©todo de gest√£o de trabalho, originado do Sistema Toyota de Produ√ß√£o (TPS) . Seu nome significa: ‚Äútabuleta‚Äù, ‚Äúregistro‚Äù ou ‚Äúplaca vis√≠vel‚Äù.\n\nNo final da d√©cada de 1940, a Toyota introduziu a fabrica√ß√£o ‚Äújust in time‚Äù em sua produ√ß√£o que ¬†representa um sistema puxado. ou seja a produ√ß√£o √© baseada na demanda do cliente, e n√£o em uma quantidade pr√© definida que √© empurrada para o mercado.\n\nEsse sistema de produ√ß√£o criou a base da produ√ß√£o Lean, ou simplesmente Lean. Onde o Foco √© minimizar as atividades, sem sacrificar a produtividade, criar mais valor para o cliente, sem gerar mais custos.\n\nO Kanban faz parte desse movimento de mudan√ßas de gest√£o da Toyota e tem como princial diferencial os \"quadros Kanban\".\n\nEsses quadros s√£o compostos por listas de tarefas (sendo as mais comuns: ‚Äú_to-do_‚Äù, ‚Äú_doing_‚Äù e ‚Äú_done_‚Äù). O Kanban prev√™ a utiliza√ß√£o de qualquer n√∫mero de quadros sendo que a sua forma deve representar as etapas no processo que est√° sendo utilizado.\n\nOutra ferramenta muito √∫til √© o conceito de WIP Limit(\"Work in progress\"), que indica os limites do trabalho em cada etapa (\"quadro\") do processo. A utiliza√ß√£o da filosofia do Kanban permite encontrar gargalos e falhas no processo al√©m de possibilitar um processo constante de melhor√≠a cont√≠nua, o chamado [[_Kaizen]]\n\n## Princ√≠pios do Kanban\n\n### 1¬∫ Princ√≠pio\n\nCome√ßar Com O Que Voc√™ J√° Faz\n\n### 2¬∫ Princ√≠pio\n\nAceitar a Busca por uma Mudan√ßa Evolutiva e Incremental\n\n### 3¬∫ Princ√≠pio\n\nRespeitar os Processos, as Fun√ß√µes \u0026 Responsabilidades Atuais\n\n### 4¬∫ Princ√≠pio\n\nEncorajar Atos de Lideran√ßa em Todos os N√≠veis\n\n## Pr√°ticas do Kanban\n\n-   Visualizar o fluxo de trabalho (workflow)\n-   Limitar a quantidade de trabalho em andamento (WIP)\n-   Gerenciar e medir o fluxo\n-   Tornar as pol√≠ticas do processo expl√≠citas\n-   Implementar loops de feedback\n\nSabendo que o Kanban √© um m√©todo de gest√£o de Trabalho ele tamb√©m pode ser utilizado em conjunto com outros m√©todos/ferramentas/pr√°ticas para complementar m√©todos de gest√£o de projetos. O mais comum √© o chamado \"Scrumban\" ou utilizar o Scrum com quadros e princ√≠pios do kanban para ajudar ao projeto.\n\nExiste muita discuss√£o entre autores e entusiastas da agilidade se o Kanban pode ser considerado um m√©todo √°gil ou n√£o. Para n√£o ficar em cima do muro, eu acredito que o Kanban √© muito mais relacionado a uma cultura/mindset √°gil e n√£o exatamente um m√©todo, mas um √≥timo complemento para qualquer equipe. Ou mesmo uma \"porta de entrada\" para os m√©todos √°geis.","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","agile-foundations"]},"/_Lean":{"title":"Lean 101","content":"Outra metodologia nascida nas f√°bricas da Toyota, o Lean foi respons√°vel por mudar a forma como as empresas realizam a produ√ß√£o em massa.\n\nInspirou empresas de software e startups a adotar suas pr√°ticas, conferindo n√£o apenas agilidade √†s equipes, mas tamb√©m reduzindo custos e aperfei√ßoando a tomada de decis√µes.\n\nS√£o 7 os princ√≠pios do Lean aplicados ao software:\n\n-   Elimine desperd√≠cios.\n-   Inclua a qualidade no processo.\n-   Crie conhecimento.\n-   Adie decis√µes e comprometimentos.\n-   Entregue o quanto antes.\n-   Respeite as pessoas e empodere a equipe.\n-   Otimize o todo.\n\nO Lean surgiu iniciamente dentro das f√°bricas como forma de melhorar o ch√£o de f√°brica e possui outras ferramentas ou metodologias que ajudam a atingir esse objetivo. Todavia ao destilar o \"core\" a principal mensagem do Lean temos esses 7 princ√≠pios que podem ser aplicados em qualquer tipo de organiza√ß√£o.","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile"]},"/_Learning-SQL":{"title":"Learning SQL","content":"#data #SQL \n## What is SQL?\nStructured Query Language (SQL pronounced S Q L or Sequel) is a language focused in access and manipulating Databases, it became an ANSI standard in 1986 and ISO in 1987. \n\nBut even though it is a Standard each developer/company can implement it in different ways. However, to be considered ANSI Compliant (and be suitable for production use) it must support the major commands:\n- SELECT\n- UPDATE\n- DELETE\n- INSERT\n- WHERE\n- and a few others.\n\nMany SQL databases possess proprietary extensions and additions specific to their implementations and therefore will not be covered here.\n\n\u003e SQL commands are case-insensitive meaning you can write them all in Uppercase: SELECT, all lowercase: update or make it a party like DeLeTE.\n\n\u003e It is however a common practice to write the function names in uppercase since it improves the readability of your queries: \n```sql\nSELECT customerName FROM table.\n```\nUsing SQL you can query for data, preferably structured data, hosted by a Relational DataBase Management System (RDBMS).\n\nData in an RDBMS is organized, from more complex to less:\n- [[_SQL Databases]]\n- [[_SQL Schemas]]\n- [[SQL Tables]]\n\nSQL was first created using concepts from relational algebra and tuple relational calculus. And can be broken down into 5 \"sublanguages\":\n- [[DDL: data definition language]], such as: \n\t- Operations\n\t\t - CREATE\n\t\t- ALTER\n\t\t- DROP\n\t- Targets\n\t\t- database\n\t\t- table\n\t\t- constraints\n\t\t- View\n\t\t- index\n- [[DQL: data query language]], such as: \n\t- SELECT\n\t- FROM\n\t- JOIN\n\t- WHERE\n\t- GROUP BY\n\t- HAVING\n\t- ORDER BY\n\t- LIMIT\n- [[DML: data manipulation language]], such as \n\t- INSERT\n\t- UPDATE\n\t- DELETE  \n- [[DCL: data control language]], such as: \n\t- GRANT\n\t- REVOKE  \n- [[TCL: transaction control language]], such as: \n\t- START (BEGIN) TRANSACTION\n\t- COMMIT\n\t- ROLLBACK\n\nThere are also 3 implementation dependant components:\n- [[SQL Operators]]\n\t- SQL Logical operators\n\t- SQL Comparison operators\n\t- SQL Math operators\n- [[SQL Functions]]\n\t- SQL Numeric functions\n\t- SQL String functions\n\t- SQL Datetime functions\n- [[_SQL Data types]]\n\t- SQL Numeric type\n\t- SQL String type\n\t- SQL Datetime type\n\t- SQL Boolean type\n\t- SQL JSON type\n\n## SQL Queries syntax\nThe SQL language can be subdivised in several elements, that may help the learning:\n[[_SQL Syntax_]]\n\nSQL techniques:\n- [[CTE - Common Table Expression]]\n- [[TEMPORARY TABLES]]\n- [[TRANSIENT TABLES]]\n\nSource: https://www.w3schools.com/sql/sql_intro.asp","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[]},"/_M.O.S.C.O.W":{"title":"M.O.S.C.O.W","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Memory-Palace":{"title":"Memory Palace","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Memory-and-memory-allocation-in-C":{"title":"_Memory and memory allocation in C","content":"#clang #data-engineering #ComputerScience \n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["clang","data-engineering","ComputerScience"]},"/_Mob-Programming":{"title":"Mob Programming","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Nhanderu":{"title":"Nhanderu","content":"# Resumo\n\nEste trabalho tem como objetivo apresentar uma alternativa para gest√£o de pessoas em organiza√ß√µes utilizando conceitos comuns como _Gamification_ e outros adaptados como o de indicadores. A ferramenta busca criar um sistema de f√°cil entendimento, preenchimento e uso de informa√ß√µes acuradas sobre os colaboradores de sua empresa, facilitando a montagem e a motiva√ß√£o de equipes, defini√ß√£o de aumentos salariais, cria√ß√£o de um espirito de competi√ß√£o positivo e valoriza√ß√£o dos profissionais que fazem parte do time.\n\nA ferramenta tem como objetivo criar um sistema de f√°cil acesso a informa√ß√£o e todas as sugest√µes propostas devem ser usadas como mais um insumo na tomada de decis√µes da empresa n√£o devendo limitar a participa√ß√£o do Gestor nas decis√µes.\n\nComposta por 3 grandes partes: Ficha, Conquistas e Ranking. Vamos √† defini√ß√£o de cada um desses grupos:\n\n**Ficha**\n\n√â um documento, um dossi√™ (Anexos 1 e 2) que re√∫ne alguns objetos para resumir e facilitar o conhecimento acerca das habilidades de um colaborador.\n\n**Indicadores**\n\nS√£o avaliadores, pr√©-estabelecidos e divididos em 6 categorias base (Proatividade, Trabalho em equipe, Cumprimento das metas, Gest√£o do tempo, Sociabilidade e Lideran√ßa), que buscam definir a qualidade que o colaborador demonstra para seus colegas.\n\n**N√≠vel**\n\nServe como um resumo acerca do trabalho do colaborador, j√° que para passar de nivel √© preciso cumprir alguns desafios pr√©-estabelecidos.\n\n**Patentes**\n\nS√£o bras√µes que indicam a fun√ß√£o e a \"posi√ß√£o hier√°rquica\" do colaborador dentro da empresa.\n\n**Medalhas**\n\nS√£o ins√≠gnias que podem ser ostentadas por motivos extraordin√°rios ou para mostrar que voc√™ superou algum dos desafios propostos.\n\n**Conquistas**\n\nS√£o desafios pr√©-estabelecidos que as pessoas podem tentar superar para conseguir medalhas.\n\n**Ranking**\n\n√â um sistema de reconhecimento do trabalho do colaborador dentro da empresa, mostrando aqueles cujo trabalho se destaca e ajudando a criar um esp√≠rito de competi√ß√£o, √© uma parte totalmente opcional da ferramenta, devendo ser usada com extremo cuidado e apenas em organiza√ß√µes onde esse rankeamento n√£o se torne um problema, como por exemplo em uma empresa, ou departamento, de vendas.\n\n# Ficha\n\n√â como um dossi√™ sobre o colaborador, em que ele √© avaliado em v√°rias categorias, atrav√©s de diversos \"indicadores\" que s√£o atribu√≠dos por seus pares durante e ap√≥s os projetos.\n\n## Indicadores\n\nIndicador √© um dado quantitativo e geralmente representado por um √≠ndice, correspondente ao aspecto ou caracter√≠stica de um determinado objeto mensur√°vel em quantidade, grandeza, intensidade, cumprimento, tempo etc.\n\nUma outra poss√≠vel defini√ß√£o de Martins e Marini (2010): O indicador √© definido como formas de representa√ß√£o quantific√°vel de caracter√≠sticas de produtos/servi√ßos ou processos, utilizadas para acompanhar e melhorar os resultados ao longo do tempo. Os indicadores s√£o compostos por 5 atributos:\n\n-   Nome: √â a forma como o indicador ser√° conhecido;\n-   Medida: Rela√ß√£o matem√°tica, grandeza qualitativa ou quantitativa que permite classificar as caracter√≠sticas, resultados e consequ√™ncias dos produtos, processos ou sistemas;\n-   √çndice: Valor do indicador, valor real e mensur√°vel do indicador em um determinado momento;\n-   F√≥rmula: Valor num√©rico, a forma como o indicador √© obtido (a maneira de se obter o √≠ndice);\n-   Metas: √çndices atribu√≠dos para os indicadores, valores a serem alcan√ßados num determinado per√≠odo de tempo. S√£o pontos ou posi√ß√µes a serem atingidos no futuro;\n-   Polaridade: Revela a orienta√ß√£o a ser seguida pelo analista do indicador (ex: Maior Melhor).\n\nNo caso que est√° sendo aplicado nessa proposta os indicadores est√£o organizados da seguinte forma:\n\n-   Nome: √â a pr√≥pria compet√™ncia que est√° sendo analisada (ex: Proatividade);\n-   Medida: Todos os crit√©rios devem ser avaliados com notas de 0 a 100, sendo que a cada 100 pontos (ap√≥s a m√©dia ser feita) o cidad√£o ganha um n√≠vel nesse crit√©rio;\n-   √çndice: S√£o os n√∫meros antes do ponto na indica√ß√£o, ent√£o se algu√©m possui 2.45 em Proatividade, quer dizer que ela esta no N√≠vel 2, e recebeu 45 pontos nos √∫ltimos trabalhos realizados;\n-   F√≥rmula: O C√°lculo do n√≠vel de cada Macrocrit√©rio (1) √© calculado pela soma das m√©dias das notas em cada microcrit√©rio, que por sua vez s√£o calculadas (2) pela soma das notas recebidas em cada microcrit√©rio (retirando a menor e a maior nota recebidas) dividido pela quantidade de notas - 2 :\n\n![](https://lh4.googleusercontent.com/JMXjByWlQdxgAQFEG6mvhe-Bx49UqtkcUY1ZyhLbDe5gDb9A9Ml2AWyMqrmQ6SCv7Vx3kUReieINDhXsA1mKRIwfZ5rcopvYyErlw8gA587NZo0wooV-jwDEMNYANYO-jzou0iw)\n\n![](https://lh4.googleusercontent.com/JMXjByWlQdxgAQFEG6mvhe-Bx49UqtkcUY1ZyhLbDe5gDb9A9Ml2AWyMqrmQ6SCv7Vx3kUReieINDhXsA1mKRIwfZ5rcopvYyErlw8gA587NZo0wooV-jwDEMNYANYO-jzou0iw)\n\n-   Metas: As metas devem ser definidas pela pr√≥pria organiza√ß√£o, mas sugiro que seja algo em torno de 70\\% ou seja o colaborador tem que se esfor√ßar para conseguir uma nota m√©dia de no m√≠nimo 70 pontos em cada um dos crit√©rios;\n-   Polaridade: Maior-Melhor para todos os crit√©rios avaliados;\n\nTodos os crit√©rios de avalia√ß√£o ser√£o agrupados em macrocrit√©rios, que √© um crit√©rio que \"abriga\" os v√°rios outros crit√©rios e √© o √∫nico a ser exibido sempre na ficha do colaborador, no caso os macrocrit√©rios s√£o: Proatividade, Trabalho em equipe, Cumprimento de metas, Gest√£o do tempo, Sociabilidade e Lideran√ßa. Os valores dos macrocrit√©rios levam em considera√ß√£o os valores de seus microcrit√©rios integrantes, mas tamb√©m recebem \"notas\" individualmente. Para observar melhor os microcrit√©rios ser√° preciso acessar o software ou a ficha (impressa) completa.\n\n### Proatividade\n\n√â o desejo de ir al√©m de um pensamento ou ideias normais; envolve tamb√©m criar solu√ß√µes antes que os problemas se tornem realidade ou busca por novos problemas que agreguem valor √† solu√ß√£o que est√° sendo trabalhada.\n\n### Trabalho em equipe\n\nCapacidade de trabalhar dentro de uma equipe: consegue cumprir com suas demandas e ajudar os colegas a cumprir as deles;\n\n-   Comunica√ß√£o - Capacidade de se fazer entender por meio escrito e oral;\n-   Empatia - Processo de identifica√ß√£o em que o indiv√≠duo se coloca no lugar do outro e, com base em suas pr√≥prias suposi√ß√µes ou impress√µes, tenta compreender o comportamento do outro;\n-   /*Embasador*/ - Processo de buscar sempre embasar suas opni√µes e propostas, tornando mais f√°cil para que os colegas acompanhem sua l√≥gica e possam decidir a favor ou contra a proposta;\n-   Aceita feedback - Capacidade de ouvir cr√≠ticas e opini√µes e internaliz√°-las, sejam boas ou sejam ruins, conseguindo remodelar seu comportamento com base naquilo que lhe foi transmitido.\n\n### Cumprimento de metas\n\nCapacidade de finalizar os requisitos combinados dentro do prazo determinado.\n\n-   Resolu√ß√£o de problemas - Propens√£o a propor solu√ß√µes ou fornecer insumos que ajudem na tomada de decis√£o, aplicando sempre um racioc√≠nio claro e comprov√°vel;\n-   Busca por conhecimento - ¬†Caracter√≠stica de sempre tentar aprofundar os conhecimentos que possui ou obter novos conhecimentos;\n-   Qualidade t√©cnica - Compet√™ncia para entregar seu trabalho usando das melhores pr√°ticas dispon√≠veis e seguir os padr√µes propostos pela empresa;\n-   Criatividade - Capacidade de encontrar novas solu√ß√µes para os problemas que aparecem e agregar conhecimentos diferentes, auxiliares ou complementares ao que est√° sendo feito;\n-   KISS - keep it simple.\n\n### Gest√£o do Tempo\n\nCapacidade de lidar com o tempo e cumprir o que se prop√µe a fazer dentro do prazo estimado.\n\n-   Pontualidade - Cumprir sempre com os hor√°rios combinados, seja para iniciar uma atividade ou termin√°-la.\n\n### Sociabilidade\n\nDomin√≠o e exercicio das regras de boa conviv√™ncia.\n\n-   Boa apresenta√ß√£o - Mant√©m-se sempre bem arrumado, limpo;\n-   Organizado - Mantem seus pertences bem organizados e concentrados em seu espa√ßo pessoal;\n-   Motivado - √â determinado, persistente, disposto, perseverante, n√£o desistir de resolver problemas ou ajudar os colegas.\n-   Respeitoso - Trata todos com respeito, n√£o apenas aqueles que s√£o seus superiores na hierarquia;\n-   Profissional - Apresenta procedimento caracter√≠stico dos bons profissionais (seriedade, competencia, responsabilidade).\n-   Intelig√™ncia emocional - Capacidade de lidar, primeiramente, com suas pr√≥prias emo√ß√µes e as rea√ß√µes emocionais de outras pessoas;\n-   \"Ready to Lead, Ready to Follow\" - Sabe respeitar tanto os seus supervisores quanto seus subordinados e consegue lidar com diverg√™ncias de opni√µes principalmente com seu time.\n\n### Lideran√ßa\n\nCapacidade de inspirar outras pessoas a agir.\n\n-   Tecnologia - Ter conhecimento da tecnologia que esta sendo empregada ou desenvolvida;\n-   Exemplo - Servir como exemplo para os outros, fazendo tudo aquilo que exige de seus colaboradores;\n-   Feedbacks - Oferecer feedbacks construtivos sem ferir os sentimentos do colega;\n-   Autoconhecimento - ¬†Conhecer seus pr√≥prios limites, pontos fracos e pontos fortes;\n-   Ger√™ncia - Possuir habilidade de gerenciar uma equipe, sabendo lidar com os diferentes perfis que podem ser encontrados nela e resolver eventuais conflitos.\n\n## N√≠vel\n\nServe como um resumo acerca do trabalho do colaborador, j√° que para passar de nivel √© preciso completar alguns desafios pr√©-estabelecidos. Cada n√≠vel indica que o colaborador bateu suas metas e deu retorno de produtividade para a empresa. Por isso ele fica apto a receber outras bonifica√ß√µes como: aumentos salariais, bonifica√ß√µes com base no lucro real da empresa, benef√≠cios como melhor plano de sa√∫de, participa√ß√£o nas decis√µes da empresa. Outra vantagem seria definir um nivel m√≠nimo para poder participar de alguns projetos, treinamentos ou outros beneficios.\n\nDe acordo com a escolha do gestor pode haver um n√≠vel m√°ximo ou n√£o dentro da ferramenta, apesar de ser uma escolha espec√≠fica de cada empresa, aconselho a pensar na quantidade m√°xima de n√≠veis uma vez que a organiza√ß√£o defina metas a serem alcan√ßadas, quanto tempo e/ou esfor√ßo s√£o necess√°rios para passar de um n√≠vel para o outro e por quanto tempo a empresa espera manter o colaborador consigo.\n\nO n√≠vel n√£o indica posi√ß√£o hier√°rquica, apesar de poder ser usado como um dos fatores para a \"promo√ß√£o\".\n\nPodem existir situa√ß√µes onde uma pessoa perde algumas de suas bonifica√ß√µes ou benef√≠cios, em geral s√£o medidas a serem tomadas como tentativa de manter o colaborador.\n\n## Patentes\n\nS√£o bras√µes que indicam a fun√ß√£o e a \"posi√ß√£o hier√°rquica\" do colaborador dentro da empresa. Para subir de patente dentro da organiza√ß√£o a pessoa precisa cumprir com alguns pr√©-requisitos que podem ou n√£o ter liga√ß√£o com o \"N√≠vel\" do colaborador. As patentes indicam, basicamente, o Cargo do colaborador, ent√£o por exemplo um Diretor possui uma Patente mais alta que um gerente, o nome das patentes variam para cada uma das empresas.\n\n## Medalhas\n\nS√£o ins√≠gnias usadas para demonstrar que o indiv√≠duo completou alguma das conquistas pr√©-definidas pela empresa, ou por situa√ß√µes extraodrin√°rias e definidas pelos respons√°veis. S√£o Bras√µes a serem ostentados apenas como forma de reconhecimento, de que o colaborador cumpriu o desafio proposto.\n\n# Conquistas\n\nS√£o desafios pr√©-estabelecidos que as pessoas podem tentar superar para conseguir medalhas.\n\n-   Semi pro - Completou 5000 horas de trabalho para a empresa, ou 32 semanas trabalhando 40;\n-   Profissional - Completou 10000 horas de trabalho para a empresa;\n-   Aprendiz - Trabalhou por 6 meses como estagi√°rio (20h semanais);\n-   Iniciante - Completou o treinamento inicial;\n-   Estudioso - Completou 3 treinamentos ofertados pela empresa;\n-   Olho do tigre - Acumulou 24 horas extras;\n-   Outras medalhas podem ser espec√≠ficas para os cargos ou departamentos.\n-   Cl√£ ‚Äúx‚Äù - Cada equipe pode criar um nome, um bras√£o para identificar seus pares\n\nAs conquistas geram as medalhas, que s√£o usadas na ficha ou mesmo como broches (ou qualquer tipo de _token_ para o colaborador guardar).\n\n# Ranking\n\n√â um sistema de reconhecimento do trabalho do colaborador dentro da empresa, mostrando aqueles cujo trabalho se destaca e ajudando a criar um esp√≠rito de competi√ß√£o, √© uma parte totalmente opcional da ferramenta, devendo ser usada com extremo cuidado e apenas em organiza√ß√µes onde esse rankeamento n√£o se torne um problema, como por exemplo em uma empresa, ou departamento, de vendas.\n\n# Por que usar\n\nO trabalho de um administrador √© gerenciar. Gerenciar processos, pessoas, ativos ou mesmo o futuro da empresa (estrat√©gia), e n√£o se gerencia o que n√£o se mede. James Harrington uma vez disse: \"Medir √© entender, entender √© ganhar conhecimento, ter conhecimento √© ter for√ßa desde o come√ßo dos tempos. O que torna o homem diferente dos outros animais √© a nossa habilidade de observar, medir, analisar e usar essas informa√ß√µes para mudan√ßas\".\n\nSabendo que precisamos gerenciar e, para tanto, precisamos medir e conhecer aquilo que pretendemos gerenciar, a ferramenta aqui apresentada pode ser de grande utilidade, uma vez que sua fun√ß√£o √© a de comunicar e mensurar o desempenho de todos dentro da empresa, atrav√©s da compara√ß√£o do desempenho atual com a meta definida.\n\n# Conclus√£o\n\nA ferramenta √© um sistema conceitual que ser√° muito melhor aproveitada depois que um software de apoio for criado para facilitar o entendimento e uso de tudo que foi feito at√© aqui. A ideia tamb√©m √© disponibilizar a ideia base para quem quiser e capitalizar com o sistema desenvolvido e com suporte+consultoria.\n\nResta agora fazer os testes; j√° h√° algumas empresas interessadas em experimentar esse sistema, mas ainda n√£o est√° claro se √© melhor testar a teoria ou j√° colocar em pr√°tica o software tamb√©m.\n\n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_OBT":{"title":"OBT","content":"#data #data-engineering ","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["data","data-engineering"]},"/_OWASP-Top-10":{"title":"OWASP - Top 10","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Organizational-Culture":{"title":"Organizational Culture","content":"√â prov√°vel que voc√™ tenha chegado at√© este artigo porque tem sentido na pele os desafios que uma cultura enfraquecida traz. Ou quer criar um ambiente mais saud√°vel que incentive o bem-estar das pessoas e retenha talento para trazer melhores resultados para o neg√≥cio.\n\nAl√©m disso, voc√™ pode ter observado recentemente:\n\n-   Pessoas se demitindo com mais frequ√™ncia;\n-   Dificuldade em contratar talentos porque os benef√≠cios oferecidos pelo mercado parecem melhores que os seus;\n-   Com a empresa crescendo em ritmo acelerado, voc√™ sente que a cultura original que surgiu com os donos acabou se perdendo pelo caminho;\n-   Ou ainda a expans√£o do neg√≥cio criou uma cultura descentralizada geograficamente em que cada unidade parece diferente da outra.\n\nSeja qual for o desafio, a resposta pode estar no fortalecimento da cultura da sua empresa. Fizemos uma colet√¢nea de conte√∫dos para ajudar voc√™ a encontrar o melhor caminho. Para isso, voc√™ pode tanto navegar pelo menu aqui ao lado e ir direto para a d√∫vida que tem tirado seu sono; ou ler o passo a passo que criamos com a ajuda dos mentores especialistas em Gest√£o de Pessoas da rede da Endeavor.\n\nVamos l√°?\n\n## Sua empresa n√£o tem uma cultura. Ela √© a cultura!\n\nA Cultura √© o resultado de uma colis√£o entre pessoas, como elas interagem entre si em um ambiente e como esse ambiente evolui baseado nessas intera√ß√µes. Quando voc√™ entende que uma cultura √© fraca ‚Äî n√£o existe algo como bom ou ruim, apenas forte e fraco ‚Äî ela √© como uma sopa com 29 ingredientes que tem um gosto diferente, mas voc√™ n√£o sabe bem o porqu√™. √â o resultado de uma grande mistura sem consist√™ncia!\n\nNa pr√°tica, o empreendedor come√ßa a sentir dores relacionadas √† cultura organizacional quando a empresa cresce em velocidade alta. √â natural que, enquanto o crescimento √© acelerado, as preocupa√ß√µes com as vendas, entregas e finan√ßas, por exemplo, se sobrep√µem √† conserva√ß√£o da cultura. A necessidade de contrata√ß√£o √© alta e muitas vezes n√£o h√° tempo para um treinamento oficial, com onboarding e imers√£o dos novos funcion√°rios. O resultado √© que acabamos misturando novos ingredientes que influenciam o resultado final da sopa.\n\nPor ess√™ncia, uma cultura √© feita de pessoas. E quando chega gente nova, √© natural que ela mude, evolua ou seja influenciada pela bagagem trazida pelos novos funcion√°rios de outras culturas que viveram.\n\nSeja a sua empresa uma startup ou scale-up, olhar para a cultura √© garantir consist√™ncia no crescimento da organiza√ß√£o, sem perder de vista os valores que a fizeram chegar onde est√° e v√£o construir o caminho para ela dar os pr√≥ximos passos.\n\nDaniel Castello, mentor Endeavor e especialista em Gest√£o de Pessoas, diz que:\n\n__A Cultura √© composta, essencialmente, do que comunicamos, em todas as suas formas, e o significado que as pessoas derivam disto. Desde a escolha do local f√≠sico, do mobili√°rio, da forma como o espa√ßo est√° dividido, do nome, da grafia, das cores, do jeito como falamos, das palavras que escolhemos ao tom de voz que usamos em cada situa√ß√£o‚Ä¶__\n\n__Tudo que fazemos, falamos e escolhemos comunica a forma como vemos o mundo, como nos posicionamos dentro dele e com que tipo de pessoas queremos nos relacionar. E como esperamos que as pessoas respondam a isto.____Desenvolver conscientemente a Cultura de uma empresa n√£o √© f√°cil. Tem a ver com a consist√™ncia como geramos e atendemos √†s expectativas criadas. Com os exemplos que criamos. Com as decis√µes que tomamos. Com as hist√≥rias que contamos. E, principalmente, com as pessoas que contratamos e as que mandamos embora.__\n\n__Pouco a pouco, as pessoas passam a compreender, espelhar e multiplicar o que valorizamos at√© que se torna uma segunda natureza da organiza√ß√£o ser daquele jeito.__\n\n## Qual √© o jeito de ser da sua empresa?\n\nEm seu workshop sobre People Operations, o mentor Edson Rigonatti lista os oito elementos acion√°veis de uma cultura, a partir de uma s√©rie de perguntas. Na medida em que voc√™ vai respondendo, o perfil da Cultura da sua empresa vai se desenhando, como um diagn√≥stico do estado atual da sua organiza√ß√£o!\n\n1.  Nossa cultura √© mission√°ria ou mercen√°ria? Estamos aqui pra ganhar dinheiro e ser eficiente ou por uma causa?\n2.  As coisas acontecem de jeito estruturado ou flex√≠vel? Tem processo para tudo ou cada um faz como quer?\n3.  Preferimos pensar sobre um problema ou sair executando e aprender no caminho?\n4.  Damos mais valor ao controle ou delegamos bem?\n5.  Temos cuidado na a√ß√£o ou existe permiss√£o ao risco?\n6.  Lidamos com as pessoas de um jeito diplom√°tico ou direto?\n7.  As pessoas s√£o individualistas ou trabalham mais em grupo?\n8.  Vale mais o que acontece dentro de casa ou fora de casa?\n\n√â raro quando a resposta a essas perguntas seja um bin√°rio sim ou n√£o. N√£o existe certo, nem errado, apenas um perfil espec√≠fico que faz a sua empresa ser do jeito que √©.\n\n## As pessoas mais importantes para a sua cultura s√£o as que v√£o embora\n\nSoa estranho num primeiro momento, mas as pessoas que voc√™ demite s√£o mais importantes do que as que voc√™ contrata para definir a cultura de um lugar. Assim, a cultura √© definida por quem fica e tamb√©m por quem vai embora, moldando os valores e os h√°bitos que s√£o aceit√°veis, mas, principalmente, aqueles que n√£o s√£o.\n\n\u003e Felipe Castro, mentor Endeavor, costuma dizer que a pior pessoa define o que √© aceit√°vel!\n\n__Quando uma pessoa sempre chega atrasada, n√£o entrega resultados, trata mal os clientes ou colegas e nada acontece, a organiza√ß√£o est√° legitimando esse comportamento. Se essa pessoa pode se comportar assim, ent√£o todos podem. O pior comportamento passa a ser o n√≠vel m√≠nimo de exig√™ncia, puxando todos para baixo. √â imposs√≠vel atingir a excel√™ncia ou construir uma cultura de alto desempenho sem eliminar os comportamentos inapropiados.__\n\n__A atitude na lideran√ßa √© chave, mas n√£o √© o bastante. Nas organiza√ß√µes horizontais, com times autogerenciados, o pr√≥prio time precisa se cobrar e se motivar. √â fundamental que a equipe crie obriga√ß√µes m√∫tuas entre seus integrantes, construindo compromissos com o desempenho e com as atitudes corretas. O pr√≥prio time deve eliminar o comportamento inadequado, seja por meio de feedback, cobran√ßa, coaching ou mesmo desligando a pessoa. O importante √© que aquele comportamento n√£o se torne parte do dia a dia do grupo.__\n\n## A Cultura nasce da mentalidade dos fundadores\n\nEdson Rigonatti tamb√©m explica que:\n\n__A cultura torna-se palp√°vel na linguagem que as pessoas usam, nos rituais que elas participam (reuni√µes, eventos), nos s√≠mbolos adotados (logos, decora√ß√£o do escrit√≥rio, personalidades admiradas), nos tipos de recompensas (dinheiro, viagens, elogios) e naqueles que os recebem (os her√≥is, comumente conhecidos como os ‚Äúqueridinhos‚Äù).__\n\nPor ess√™ncia, ela √© formada pela mentalidade dos fundadores, a vis√£o que os empreendedores tinham l√° no in√≠cio sobre o que fazia aquela empresa especial e diferente de todas as outras do mercado. Na pr√°tica, √© a vis√£o de Larry Page e Sergey Brin que originou o Google; a aud√°cia de Steve Jobs que fez nascer a Apple; a perspectiva de gest√£o do trio Marcel Teles, Jorge Paulo Lemann e Beto Sicupira que fez nascer a AMBEV.\n\nAssim, √© imposs√≠vel transplantar a cultura do Google em uma empresa B2B tradicional, como explica M√¥nica Santos, diretora de RH do Google Latam no v√≠deo abaixo:\n\nAl√©m de criar um bom ambiente de trabalho, a cultura tamb√©m influencia nos resultados da empresa. A hist√≥ria da LEGO √© um exemplo disso. Em 10 anos, a empresa perdeu valor em uma m√©dia de 300 mil euros por dia, por conta de uma s√©rie de problemas de gest√£o. Foi a entrada do novo CEO, Jorgen Vig Knudstorp , que trouxe √† tona os valores que levaram a LEGO a ser um sucesso l√° no come√ßo:\n\n\u003e A LEGO estava em um neg√≥cio para criar brinquedos de constru√ß√£o inovadores em que as crian√ßas poderiam aprender com eles.\n\nE era preciso relembrar a empresa inteira desse prop√≥sito. Foi quando todos retomaram a mentalidade do fundador e se voltaram para o core da empresa que o jogo virou. [Veja a hist√≥ria completa aqui.](https://endeavor.org.br/estrategia-e-gestao/lego-mentalidade-fundador/)\n\n****Para aprofundar nesse tema, leia tamb√©m:****[Livro A Mentalidade do Fundador](https://www.buscape.com.br/a-mentalidade-do-fundador-chris-zook-8567871751)\n\n## Como definir a cultura da minha empresa?\n\nSe a cultura da sua empresa est√° clara para voc√™, mas nem tanto para o seu time, √© importante colocar no papel. Todo CEO √© tamb√©m um Chief Cultural Officer, por isso √© t√£o importante se ater at√© aos m√≠nimos detalhes.\n\nA empreendedora Leila Velez, do Beleza Natural, conta nesse texto que:\n\n__Cada movimento da sua sobrancelha manda uma mensagem para toda a organiza√ß√£o. Ou seja, se voc√™ n√£o estiver bem, com certeza esse sentimento tende a se espalhar por toda a equipe, feito rastilho de p√≥lvora. O empreendedor molda a cultura de sua organiza√ß√£o por meio de sua pr√≥pria personalidade. Aquela velha hist√≥ria de ‚Äúfa√ßa o que eu digo e n√£o o que eu fa√ßo‚Äù quase nunca funciona, pois o tamanho da influ√™ncia √© muito maior do que o empreendedor imagina, na maioria das vezes.__\n\n\u003e Se a cultura organizacional √© alma, a identidade √© a personalidade e os anseios que tornam essa empresa √∫nica.\n\n### Defina os tr√™s pilares: Miss√£o, Vis√£o e Valores\n\nMuitas empresas j√° t√™m esses pilares definidos na √°rea institucional do site, ou at√© na parede do escrit√≥rio, mas eles nada significam para as pessoas que ali trabalham. N√£o basta uma frase bonita, ou uma s√©rie de valores brilhosos, se isso n√£o for uma verdade que pulsa em cada pessoa do time.\n\n## PARA COLOCAR A M√ÉO NA MASSA, VEJA TAMB√âM:\n\n![](https://images.endeavor.org.br/uploads/2016/05/cultura-organizacional-industria-300x181.jpg)\n\n-   [Gest√£o de Pessoas](https://endeavor.org.br/desafio/pessoas/)\n\n### Cultura organizacional: eleve sua ind√∫stria para outro patamar\n\n![](https://images.endeavor.org.br/uploads/2015/10/Miss%C3%A3o-vis%C3%A3o-e-valores-Artigo-957x580-300x181.png)\n\n-   [Gest√£o de Pessoas](https://endeavor.org.br/desafio/pessoas/)\n\n### Miss√£o, Vis√£o e Valores: ferramenta gratuita para definir a identidade do seu neg√≥cio\n\n![](https://images.endeavor.org.br/uploads/2018/06/21123050/sem-imagem-735x305.jpg)\n\n-   [Marketing](https://endeavor.org.br/desafio/marketing/)\n\n### Como Construir a Identidade da Empresa?\n\n## Como conservar a cultura organizacional quando a empresa come√ßa a crescer?\n\nNo fundo, a cultura √© tudo aquilo que permanece em uma empresa quando os donos n√£o est√£o olhando.Quando o Beleza Natural estava se preparando para escalar, a pergunta que guiou os s√≥cios foi: se a gente sumisse do planeta, o que deveria ser o jeito de agir do Beleza Natural?\n\n[Nesse v√≠deo](https://www.youtube.com/watch?v=H8TYYszf4TI), Leila Velez conta como eles chegaram na ess√™ncia e nos valores mais fundamentais para, ent√£o, multiplic√°-los para toda empresa, na medida em que ela crescia.\n\nEm uma organiza√ß√£o global, o choque de culturas √© ainda maior. Pedro Janot, mentor Endeavor, [conta nesse artigo](https://endeavor.org.br/pessoas/como-manter-cultura-organizacional-em-fase-de-expansao/) como contornou esse desafio quando assumiu a presid√™ncia da Azul Linhas A√©reas: uma empresa formada por americanos e brasileiros que herdava muito da antiga Varig, por conta das contrata√ß√µes feitas. Como construir uma cultura do zero quando nenhum funcion√°rios √© uma p√°gina em branco?\n\nJames Allen, s√≥cio da Bain \u0026 Company, acredita que [existem 5 li√ß√µes fundamentais para manter a alma de uma pequena empresa](https://endeavor.org.br/pessoas/alma-empresa-pequena/), mesmo quando ela come√ßa a crescer. Entre elas, ent√£o:\n\n1.  Clareza de prop√≥sitos\n2.  Liberdade dentro do limite\n3.  Comunica√ß√£o sem burocracia\n4.  Interdepend√™ncia\n5.  Generosidade de esp√≠rito\n\nVeja em profundidade cada uma dessas li√ß√µes [clicando aqui](https://endeavor.org.br/pessoas/alma-empresa-pequena/).\n\nEsse √∫ltimo √© para ele o mais importante:\n\n__A ‚Äúcola‚Äù que fortalece as rela√ß√µes √© a generosidade ‚Äî a disposi√ß√£o de todos para treinar, inspirar, incentivar, encorajar, elogiar e respeitar uns aos outros. Voc√™ pode ver como √© f√°cil perder essa generosidade de esp√≠rito √† medida que se cresce ‚Äî e com ela, a alma da sua empres__\n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Pomodoro-technique":{"title":"Pomodoro technique","content":"#agile #productivity #tools \n# The pomodoro technique\n\nDesenvolvida no final da d√©cada de 80 por Francisco Cirillo √© uma ferramenta de gest√£o de tempo aplicada na realiza√ß√£o de tarefas, sejam elas relacionadas ao trabalho, estudos, hobbies ou outros.\n\nA t√©cnica foi criada pensando ajudar as pessoas que s√£o procrastinadoras, pois permite a varia√ß√£o de per√≠odos de concentra√ß√£o com momentos de descanso.\n\nPomodoro significa tomate em Italiano, o nome vem dos \"timers\" de cozinha que muitas vezes v√™m em formato de comidas (no caso um tomate). E a principal vantagem dessa t√©cnica √© que tudo que voc√™ precisa para executa-la √© um timer e uma lista de tarefas (Voc√™ tamb√©m pode utilizar o [bot no Telegram](https://telegram.me/pimodoro_bot) criado por mim).\n\nDesde sua cria√ß√£o existem diversas propostas de melhorias por√©m na forma mais comum ela dura at√© 2 horas. onde voc√™ faz a atividade por 25 minutos e descansa por 5 minutos, repetindo esse ciclo at√© atingir as 2 horas.\n\nCaso voc√™ deseje continuar utilizando a t√©cnica ap√≥s as duas horas, primeiramente voc√™ descansa por 30 minutos, como recompensa, e repete os passos anteriores.\n\nO Autor tamb√©m afirma, em seu livro, que a t√©cnica pode trazer outros benef√≠cios como:\n\n-   Redu√ß√£o da ansiedade\n-   Melhora na tomada de decis√µes\n-   Melhora na motiva√ß√£o\n-   Aumento do foco\n-   entre outros.\n\nPara facilitar ainda mais, reproduzo aqui o passo-a-passo da [Wikipedia](https://pt.wikipedia.org/wiki/T%C3%A9cnica_pomodoro).\n\n**Passo-a-passo**\n\n1.  Escolher e listar as tarefas a serem executadas;\n2.  Ajustar o cron√¥metro para o tempo desejado (geralmente 25 minutos);\n3.  Escolher a tarefa inicial;\n4.  Trabalhar na tarefa escolhida at√© que o alarme toque. Se alguma distra√ß√£o importante surgir, anot√°-la e voltar o foco imediatamente de volta √† tarefa;\n5.  Quando o alarme tocar, fazer uma marca√ß√£o em um papel para contabilizar a quantidade de intervalos.\n6.  Se houver menos de 4 marca√ß√µes, fazer uma pausa curta (3-5 minutos);\n7.  Depois da quarta marca√ß√£o, fazer uma pausa mais longa (10-30 minutos), zerando a contagem de marca√ß√µes e retornando ao passo","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","productivity","tools"]},"/_Post-morten-of-a-Brazilian-Startup":{"title":"Post-morten of a Brazilian Startup","content":"It all started about 10 years ago and ended about 3 or 4 so I believe it is plenty of time to look back some memories and put a finger in some wounds.\n\nIt all began some time ago in the island of the sun,\n\nIt all began when I began attending Computer Engineering in Universidade de Bras√≠lia, by the end of the first year I've started being more active in the Computer Engineering Student's Union (known as CAEC)","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Preaching-agile":{"title":"Preaching agile","content":"1.  √â poss√≠vel testar sempre e validar o que est√° sendo feito.\n2.  Criar um Feedback loop com o cliente e melhorar n√£o s√≥ o produto final, mas todo o processo de realiza√ß√£o do projeto.\n3.  O retorno sobre o investimento (ROI) fica mais claro para o cliente a cada itera√ß√£o.\n4.  Expectativas controladas.\n5.  Necessidades, clientes, equipe e o mundo mudam, portanto o projeto deve acompanhar todas essas mudan√ßas.\n\nOs clientes podem alterar o projeto ao longo do processo. O Product Owner se compromete n√£o com dois anos de projeto, mas sim com apenas duas semanas. Por exemplo, em uma semana ele pode mudar a ordem, o valor do neg√≥cio e, principalmente, pode decidir, a cada semana, junto ao time, o que vai ser feito. Assim, a flexibilidade e a adaptabilidade s√£o muito maiores.\n\nO planejamento iterativo e as entregas pequenas permitem a redu√ß√£o dos riscos. As decis√µes s√£o tomadas √† medida que n√≥s vamos aprendendo sobre o tema e adquirindo mais conhecimento e mais certezas. Isso op√µe-se a ideia do Waterfall, na qual h√° uma tomada pr√©via de decis√µes.\n\nAs entregas s√£o r√°pidas, ent√£o, √© poss√≠vel colocar produtos no mercado com mais agilidade do que com abordagens tradicionais.\n\nOs testes n√£o s√£o feitos apenas no final, s√£o cont√≠nuos.\n\nDessa maneira √© poss√≠vel evitar requisitos que nunca s√£o implementados, designs que nunca viram realidade ou que se tornam desatualizados. Al√©m disso, reduz-se potencialmente o ac√∫mulo de trabalho em filas como costuma acontecer com m√©todos tradicionais.\n\nTudo est√° sempre vis√≠vel e pode ser facilmente acessado. Dessa maneira, a equipe consegue identificar no que cada um dos outros membros est√° trabalhando e √© capaz de colaborar melhor. Qualquer pessoa que se aproximar de uma equipe √°gil consegue identificar o que a equipe j√° conquistou, o que terminou, o que falta e mais atrav√©s de quadros (veremos mais adiante). Ent√£o, o status do projeto est√° sempre √† vista das pessoas. Assim como √© percept√≠vel que os times encontram-se mais motivados, divertidos, felizes. Isso porque, geralmente, esses ambientes tendem a ser mais leves e extrovertidos.\n\nO time consegue saber exatamente para onde vai o projeto e em que momento est√°, dessa forma √© muito mais f√°cil ‚Äúvestir a camisa‚Äù do projeto. Al√©m disso, as entregas cont√≠nuas, em curto espa√ßo de tempo, ajudam o time a ver o resultado de todo seu esfor√ßo a todos os momentos, aumentando ainda mais a motiva√ß√£o e a ‚Äúalegria‚Äù em trabalhar.","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","agile-foundations"]},"/_Process-management-in-development":{"title":"_Process management in development","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[]},"/_Product-Box":{"title":"Product Box","content":"Consiste em pensar na caixa na qual o produto seria enviado para o cliente, a embalagem que estaria exposta em uma prateleira, a capa de um livro. Deve possuir:\n\n-   Nome do produto;\n-   Slogan;\n-   Funcionalidades;\n-   Benef√≠cios.\n\nA Product Box deve ser real, f√≠sica, um objeto com peso e dimens√µes pois ajuda a equipe a manter o foco, visualizaro produto e saber qual o valor final deve ser oferecido.","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Product-Owner":{"title":"Product Owner","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_RDBMS":{"title":"_RDBMS","content":"#SQL ","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["sql",""]},"/_Ransomware":{"title":"Ransomware","content":"#security ","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["security"]},"/_S.M.A.R.T":{"title":"S.M.A.R.T","content":"Se voc√™ j√° trabalhou em uma empresa de m√©dio a grande porte com certeza j√° ouviu sobre as \"metas\", ou como fulano ou tal departamento precisa \"bater a meta\". Mas afinal o que √© essa Meta?\n\n\u003e **Significado de Meta**\n\n\u003e substantivo feminino Aquilo que se pretende alcan√ßar; objetivo, finalidade.Finaliza√ß√£o de alguma coisa; termo, limite: a meta j√° foi entregue. [Fonte.](https://www.dicio.com.br/meta/)\n\nFalando de uma maneira mais informal as metas s√£o como indica√ß√µes, guias que mostram para onde a empresa est√° indo. Portanto podemos pensar nas metas como os sinais de uma trilha, nos indicando se estamos no caminho certo ou n√£o.\n\nUma das maiores dificuldades para empresas, e principalmente, gestores √© a defini√ß√£o de metas que ajudem a guiar a organiza√ß√£o para atingir seus objetivos. Pois uma meta tem que ser √∫til, entend√≠vel pelos colaboradores e n√£o podem ser imposs√≠veis para n√£o desmotivar a equipe. Tentando resolver isso √© que surgem as metas S.M.A.R.T. que foram popularizadas por Peter Drucker.\n\nS.M.A.R.T. √© um acr√¥nimo do ingl√™s para as 5 caracter√≠sticas de metas de qualidade s√£o elas:\n\n### S\n\nEspec√≠fica (do ingl√™s specific).\n\n\u003e O que, exatamente, eu quero medir?\n\nO Resultado a ser atingido tem que estar claro para todos os envolvidos e ser o mais objetivo poss√≠vel. Podemos ainda utilizar uma segunda ferramenta para verificar se nosso objetivo est√° espec√≠fico o suficiente: o 5W2H.\n\n**Por exemplo**\n\nO objetivo: \"Atrair novos clientes\" √© muito amplo poderiamos reformular ele para ser espec√≠fico da seguinte forma: \"Aumentar a quantidade de novos clientes em 10%\" (Note que aqui a meta apesar de mais espec√≠fica ainda est√° incompleto, por√©m vamos complementar com as pr√≥ximas etapas do S.M.A.R.T.)\n\n### M\n\nMensur√°vel (do ingl√™s Measurable)\n\n\u003e Como eu vou saber que eu atingi o objetivo?\n\nQuando falamos em algo mensur√°vel estamos querendo algo que possa ser medido e ter seu resultado expresso de maneira simples, por exemplo, o tamanho de um apartamento ser 40mÀÜ2, √© algo mensur√°vel, todos sabemos, mesmo que intuitivamente, o que √© um metro.\n\nSendo assim precisamos pensar como vamos expressar os resultados atingidos de maneira consistente, ent√£o a meta anterior de Atrair novos clientes pode passar a ser escrita como: \"Aumentar a quantidade de novos clientes em 10% em rela√ß√£o ao m√™s anterior\". Afinal n√≥s sabemos o que quer dizer um aumento de 10%, √© uma rela√ß√£o matem√°tica objetiva.\n\n### A\n\nAting√≠vel (do ingl√™s Attainable)\n\n\u003e Est√° em nosso poder alcan√ßar essa meta?\n\nO nome √© autoexplicativo mas devemos tomar cuidado com ele, pois existe uma diferen√ßa entre uma meta imposs√≠vel e uma meta desafiadora. No artigo sobre Estado de Flow, falo um pouco mais sobre isso.\n\nE por mais que seja uma possibilidade autoexplicativa ela exige tamb√©m muito cuidado e conhecimento da organiza√ß√£o e do time, pois muitas vezes uma meta como: \"Aumentar a quantidade de novos clientes em 10% em rela√ß√£o ao m√™s anterior\" pode parecer facilmente ating√≠vel, por√©m se a sua empresa trabalha em um mercado de nicho muito pequeno, como por exemplo o fornecimento de pe√ßas para constru√ß√£o de armamento, esse objetivo pode n√£o ser ating√≠vel, j√° que n√£o existem tantos compradores assim no mercado.\n\nOu por exemplo a sua empresa fechou um acordo de exclusividade com um dos clientes por 24 meses, ser√° imposs√≠vel, nesse per√≠odo, aumentar a quantidade de clientes.\n\n### R\n\nRelevante (do ingl√™s Relevant)\n\n\u003e Ao atingir essa meta, teremos realizado algo de √∫til ou importante para a empresa?\n\nAqui estamos querendo responder uma pergunta simples mas que ajuda a evitar o \"[excesso de gest√£o](http://localhost:2368/existe-excesso-de-gestao/)\". Ent√£o n√≥s realmente precisamos medir isso? Ao atingir essa meta n√≥s estaremos trazendo um benef√≠cio paup√°vel e que justifica seu custo para a empresa?\n\nPor exemplo: \"Reduzir o uso de canetas bic da cor azul para uma caneta por pessoa por trimestre\". √â uma meta espec√≠fica, mensur√°vel, possivelmente ating√≠vel, mas qual a relev√¢ncia disso para o neg√≥cio?\n\n### T\n\nTemporal (do ingl√™s Time-based ou em algumas fontes Timely)\n\n\u003e Quando, exatamente, n√≥s queremos atingi-la?\n\nPor fim chegamos a caracter√≠stica que diferencia sonhos e promessas de objetivos alcan√ßados. Para uma meta ser completa e trazer \"bons frutos\" para empresa ela deve ser cumprida dentro de um prazo de tempo. (Falo mais sobre a necessidade de tempos definidos no artigo Time-box)\n\nSendo assim agora podemos avaliar a meta que estavamos construindo desde o in√≠cio do artigo: \"Aumentar , mensalmente, a quantidade de novos clientes em 10% em rela√ß√£o ao m√™s anterior.\" Neste caso n√£o precisamos dizer o mensalmente pois ao nos referir ao m√™s anterior j√° damos o sentido de que essa meta tem que ser alcan√ßada mensalmente.\n\n### Metas divisiveis\n\nOutra caracter√≠stica importante de boas metas √© que posteriormente elas podem ser quebradas em tarefas, processos ou projetos, facilitando assim o trabalho da equipe no cumprimento das metas\n\n### Importante\n\nVale ressaltar tamb√©m que eu n√£o preciso montar todas as minhas metas seguindo a ordem que foi apresentada nesse artigo, ent√£o as vezes eu tenho um prazo claro para atingir o resultado e a partir dele eu posso come√ßar a trabalhar o que √© realiz√°vel dentro desse per√≠odo de tempo.\n\n### Exemplo e exerc√≠cios de Metas S.M.A.R.T\n\nA seguir apresento uma an√°lise feita sobre uma meta e sugiro outras metas para que voc√™ possa fazer a sua an√°lise e tentar entender melhor como funciona essa ferramenta.\n\n### 1. Emagrecer 12 quilos (de gordura) em 12 meses.\n\n**N√ÉO SOU NUTRICIONISTA! POR FAVOR PROCURE AJUDA M√âDICA ANTES DE FAZER QUALQUER COISA NESSE SENTIDO.**\n\n- √â espec√≠fica, pois trata-se de uma a√ß√£o clara ainda mais quando inclu√≠mos o fato de que esses 12 quilos s√£o de gordura e n√£o apenas o peso na balan√ßa\n\n- √â mensur√°vel, j√° que existem diferentes t√©cnicas para verificar o progresso\n\n- √â Ating√≠vel, uma vez que os nutricionistas estimam que √© poss√≠vel perder, de maneira saud√°vel, at√© 2 quilos por m√™s.\n\n- √â relevante, pois se a pessoa busca perder essa gordura ela tem uma inten√ß√£o clara como por exemplo \"equilibrar taxas\" ou se sentir melhor em rela√ß√£o a pr√≥pria apar√™ncia.\n\n- √â temporal, existe um prazo claro definido na defini√ß√£o da meta\n\n- √â Divis√≠vel, podemos criar uma s√©rie de tarefas que ajudaram a alcan√ßar esse objetivo como por exemplo: \"Seguir a dieta passada pelo profissional de Nutri√ß√£o\", \"Realizar os treinos, passados por um profissional de Educa√ß√£o F√≠sica, ao menos 3 vezes por semana\", \"Reduzir o consumo de refrigerantes e bebidas doces para no m√°ximo 2 copos por semana\". E uma s√©rie de outras tarefas que ajudar√£o a atingir a meta estabelecida.\n\n### 2. Reduzir o gasto com fornecimento de material de escrit√≥rio em 15% nos pr√≥ximos 3 meses.\n\n### 3. Alcan√ßar um faturamento anual de R$10.000.000,00 at√© o ano de 2022","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","project-management"]},"/_SQL-Data-types":{"title":"_SQL Datatypes","content":"\n## SQL data types\n\nThe SQL standard defines three kinds of¬†[data types](https://en.wikipedia.org/wiki/Data_type \"Data type\")¬†(chapter 4.1.1 of SQL/Foundation):\n\n-   predefined data types\n-   constructed types\n-   user-defined types.\n\n_Constructed types_¬†are one of ARRAY, MULTISET, REF(erence), or ROW.¬†_User-defined types_¬†are comparable to classes in object-oriented language with their own constructors, observers, mutators, methods, inheritance, overloading, overwriting, interfaces, and so on.¬†_Predefined data types_¬†are intrinsically supported by the implementation.\n\n### Predefined data types[[edit](https://en.wikipedia.org/w/index.php?title=SQL\u0026action=edit\u0026section=21 \"Edit section: Predefined data types\")]\n\n-   Character types\n\n-   Character (CHAR)\n-   Character varying (VARCHAR)\n-   Character large object (CLOB)\n\n-   National character types\n\n-   National character (NCHAR)\n-   National character varying (NCHAR VARYING)\n-   National character large object (NCLOB)\n\n-   Binary types\n\n-   Binary (BINARY)\n-   Binary varying (VARBINARY)\n-   Binary large object (BLOB)\n\n-   Numeric types\n\n-   Exact numeric types (NUMERIC, DECIMAL, SMALLINT, INTEGER, BIGINT)\n-   Approximate numeric types (FLOAT, REAL, DOUBLE PRECISION)\n-   Decimal floating-point type (DECFLOAT)\n\n-   Datetime types (DATE, TIME, TIMESTAMP)\n-   Interval type (INTERVAL)\n-   Boolean\n-   XML\n-   JSON","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_SQL-Syntax_":{"title":"_SQL Syntax_","content":"\nhttps://en.wikipedia.org/wiki/SQL_syntax\n\nThe SQL language is subdivided into several language elements, including:\n\n-   _Clauses_, which are constituent components of statements and queries. (In some cases, these are optional.)\n-   _Expressions_, which can produce either¬†[scalar](https://en.wikipedia.org/wiki/Scalar_(computing) \"Scalar (computing)\")¬†values, or¬†[tables](https://en.wikipedia.org/wiki/Table_(database) \"Table (database)\")¬†consisting of¬†[columns](https://en.wikipedia.org/wiki/Column_(database) \"Column (database)\")¬†and¬†[rows](https://en.wikipedia.org/wiki/Row_(database) \"Row (database)\")¬†of data\n-   _Predicates_, which specify conditions that can be evaluated to SQL¬†[three-valued logic (3VL)](https://en.wikipedia.org/wiki/Ternary_logic \"Ternary logic\")¬†(true/false/unknown) or¬†[Boolean](https://en.wikipedia.org/wiki/Boolean_logic \"Boolean logic\")¬†[truth values](https://en.wikipedia.org/wiki/Truth_value \"Truth value\")¬†and are used to limit the effects of statements and queries, or to change program flow.\n-   _Queries_, which retrieve the data based on specific criteria. This is an important element of¬†_SQL_.\n-   _Statements_, which may have a persistent effect on schemata and data, or may control¬†[transactions](https://en.wikipedia.org/wiki/Database_transaction \"Database transaction\"), program flow, connections, sessions, or diagnostics.\n    -   SQL statements also include the¬†[semicolon](https://en.wikipedia.org/wiki/Semicolon \"Semicolon\")¬†(\";\") statement terminator. Though not required on every platform, it is defined as a standard part of the SQL grammar.\n-   _[Insignificant whitespace](https://en.wikipedia.org/wiki/Whitespace_(computer_science) \"Whitespace (computer science)\")_¬†is generally ignored in SQL statements and queries, making it easier to format SQL code for readability.","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Scrum":{"title":"Scrum 101","content":"# Scrum 101\nScrum √© o framework mais utilizado e conhecido dentro os m√©todos √°geis. Foi criado por dois dos signat√°rios originais do manifesto √°gil ([Jeff Sutherland](https://www.scruminc.com/scrum-blog/) e [Ken Schwaber](https://kenschwaber.wordpress.com/)) e integra um conjunto de pr√°ticas e princ√≠pios voltados para a execu√ß√£o. Um dos pontos principais √© que o Scrum √© muito bem aplicado em equipes enxutas (3 a 9 pessoas).\n\nDentro do m√©todo Scrum existem 5 ‚Äúest√°gios‚Äù b√°sicos:\n\n-   Planejamento do projeto;\n-   Planejamento de sprint;\n-   Reuni√£o di√°ria;\n-   Reuni√£o de revis√£o de sprint;\n-   Retrospectiva de sprint.\n\nPraticamente tudo que ocorre dentro do Scrum utiliza como base o conceito de [Time-box](http://localhost:2368/time-box/).\n\nAl√©m desses processos, existem 2 grupos de participantes dos projetos:\n\n-   Porcos: todos aqueles envolvidos diretamente com o projeto.\n-   Galinhas: aqueles que possuem envolvimento indireto com o projeto.\n\nDentre os Porcos, existem 3 pap√©is bem definidos:\n\n-   Product Owner (serve como ponte entre clientes e equipe);\n-   Team member (executam o trabalho);\n-   Scrum master (atua como facilitador para a equipe e √© o maior conhecedor do Scrum).\n\n_‚ÄúO Scrum surgiu para solucionar problemas relacionados √† etapa de execu√ß√£o dos projetos e, por isso, deixou alguns gaps como: dificuldade de integra√ß√£o entre equipes distintas e gest√£o das fases de nascimento e entrega do projeto‚Äù_\n\nSCRUM - Metodologia √Ågil\n\nO site oficial Scrum.org define:\n\n\u003e [o **m√©todo Scrum** √©] ‚Äúum _framework_ em que as pessoas podem tratar de problemas complexos e adaptativos ao entregarem ‚Äî de modo produtivo e criativo ‚Äî produtos de alt√≠ssimo valor‚Äù.\n\nEm resumo o Scrum √© um conjunto de pr√°ticas e ferramentas que tem como objetivo o desenvolvimento de trabalho de forma incremental e iterativa buscando a melhor efetividade do trabalho. Todo o trabalho √© feito sobre 3 pilares principais:\n\n-   Transpar√™ncia\n-   Inspe√ß√£o\n-   Adapta√ß√£o\n\nAl√©m disso. em seu esqueleto, o **Scrum** tamb√©m conta com_3 Pap√©is, 3 Artefatos e 3 Eventos._\n\n## Pap√©is principais\n\n### Product Owner (PO)\n\nServe como a ponte que liga a Equipe aos clientes e stakeholders. √â respons√°vel por entender as necessidades do cliente e passar para os clientes, al√©m de priorizar, por ordem de valor/import√¢ncia, as tarefas as serem feitas.\n\n### Scrum Master (SM)\n\nO Scrum Master tem muita similaridade com o conceito de L√≠der Servidor (do livro: O Monge e o Executivo) tem como principal responsabilidade apoiar a equipe nas entregas, seja removendo impedimentos ou oferecendo as condi√ß√µes necess√°rias.\n\n### Developer Team (Dev Team)\n\n√â o time que executa, constr√≥i o projeto. √â uma equipe pequena (de 3 a 9 pessoas) auto-organiz√°vel (ou seja n√£o existem \"chefes\", nem mesmo o Scrum master ou o Product owner).\n\n## Artefatos\n\n### Product Backlog\n\n√â aqui onde as tarefas do produto s√£o definidos, deve sempre estar ordenado de acordo com a import√¢ncia para o cliente (essa gest√£o √© feita pelo P.O.). Al√©m disso deve levar em considera√ß√£o o conhecimento do cliente e da equipe no [detalhamento de tarefas](http://localhost:2368/problemas-metodos-tradicionais/). Sendo que as tarefas mais \"importantes\" devem ser o mais detalhado poss√≠vel, permitindo assim uma gest√£o do tempo do cliente e da equipe n√£o perdendo tempo com algo que n√£o ser√° executado no momento.\n\n### Sprint Backlog\n\nAqui s√£o as tarefas que foram definidas durante a reuni√£o de Planejamento como sendo o \"entreg√°vel\" da sprint. Espera-se que ao final da Sprint todas as taregas do seu backlog estejam \"prontas\".\n\n### Incremento/Entrega\n\n√â um conjunto de funcionalidades que acrescentam aquilo que j√° foi entregue anteriormente, aumentando a entrega de valor para o cliente. Pode ser pensado tamb√©m como o resultado esperado de uma sprint.\n\n## Eventos (ou reuni√µes)\n\n### Planejamento de Sprint\n\n√â a reuni√£o onde a equipe, em conjunto com o P.O., vai definir o que ser√° entregue ao final dessa sprint.\n\n### Reuni√£o Di√°ria\n\nTamb√©m conhecida como Standup meeting (Reuni√£o em p√©) tem esse nome pois deve ser realizada em at√© 15 minutos. Deve acontecer todos os dias, no mesmo hor√°rio e local. Tem como principal fun√ß√£o ajudar a nivelar o entendimento de todos da equipe e evitar interrup√ß√µes desnecess√°rias ao longo do dia.\n\nDurante a reuni√£o todos no time devem responder 3 perguntas:\n\n-   O que eu fiz?\n-   O que eu vou fazer hoje?\n-   Existe algo que me impe√ßa de executar minha tarefa?\n\n### Review\n\n√â realizada ao final da sprinte e √© a reuni√£o onde a equipe apresenta, para o P.O. e/ou cliente, aquilo que foi feito durante a sprint.\n\n### Retrospectiva\n\n√â uma reuni√£o da equipe, com a equipe e para a equipe! Tem como principal objetivo avaliar o processo ou fluxo de trabalho durante a sprint e oferecer elogios e sugest√µes de melhoria para o trabalho que √© executado.\n\n![](https://www.desenvolvimentoagil.com.br/images/scrum/ciclo_scrum.gif)","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","agile-foundations","scrum"]},"/_So-what-is-Git-Flow":{"title":"_So what is Git Flow?","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[]},"/_Software-Engineering":{"title":"_Software Engineering","content":"\n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["ComputerScience",""]},"/_Squads":{"title":"Squads 101","content":"Squads √© um modelo organizacional que consiste em dividir a equipe da empresa em pequenos times multidisciplinares. Cada Squad fica respons√°vel por todos os aspectos de um determinado projeto, produto ou feature, e possui total autonomia na tomada de decis√£o.\n\nGanhou grande proje√ß√£o ap√≥s o Spotify lan√ßar um [v√≠deo](https://labs.spotify.com/2014/03/27/spotify-engineering-culture-part-1/) explicando seu uso e funcionamento dentro da empresa.\n\nDo ingl√™s, Squad significa, literalmente, esquadr√£o. O termo faz alus√£o ao conceito militar de esquadr√£o, que consiste em um pequeno grupo de soldados com diferentes especialidades: um comandante, um m√©dico, um atirador de elite, um engenheiro, entre outros. Como uma vers√£o reduzida de um ex√©rcito completo, um esquadr√£o deve ser aut√¥nomo e capaz de executar miss√µes de maneira independente.\n\nPara saber mais sobre Squad nada melhor o que buscar direto na fonte, assitindo as [explica√ß√µes do Spotify sobre esse m√©todo](https://engineering.atspotify.com/2014/09/20/spotify-engineering-culture-part-2/).\n\nConforme apresentado no v√≠deo, o conceito de Squads foi uma abstra√ß√£o do que acontecia no Spotify no in√≠cio da d√©cada de 2010. E o ensinamento mais importante que podemos tirar disso [√© a possibilidade de estudar, modificar e melhorar m√©todos e ferramentas que sua equipe j√° utiliza.](http://localhost:2368/a-cultura-do-crescimento/)\n\nA [Agilidade](http://localhost:2368/o-que-sao-metodos-ageis/) √© muito mais uma ideia, uma [cultura](http://localhost:2368/cultura-agil/) do que uma metodologia bem definida, sendo assim n√£o s√≥ podemos, como devemos, experimentar e buscar sempre a [melhoria cont√≠nua](http://localhost:2368/kaizen-melhoria-continua/) de nossos processos.","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","agile-foundations"]},"/_Team-programming-Dos-and-Donts":{"title":"_Team programming Dos and Don'ts","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[]},"/_The-4Ms-of-Management":{"title":"The 4Ms of Management","content":"\"Sempre fui da √°rea T√©cnica, gostava de ajudar as pessoas e conseguia fazer um trabalho legal com minha equipe. Mas tudo mudou quando fui promovido a um cargo de gest√£o. Me sinto perdido, sobrecarregado e sem ajuda.\"\n\nSe voc√™ se identificou com o relato acima n√£o se preocupe, √© uma situa√ß√£o mais comum do que seria ideal.\n\nQuando pensamos em gest√£o, muitas vezes temos dificuldades de entender o que, como e quando fazer alguma coisa. Principalmente por ser muito comum promover a pap√©is de lideran√ßa/gest√£o pessoas que se destacam tecnicamente em sua √°rea ou mesmo aqueles que demonstram uma Lideran√ßa quase inata, que muitas vezes possui suas limita√ß√µes.\n\nSendo asism estamos propondo um novo framework para Gest√£o t√°tica e ou estrat√©gica de organiza√ß√µes.\n\n### 1. Metas\n\n\u003e Consiste na defini√ß√£o de alvos que se espera alcan√ßar num curto/m√©dio prazo, sendo eles atrelados √† m√©tricas de performance.\n\nUma das formas mais simples e eficiente de definir boas metas √© utilizando as ferramenta [S.M.A.R.T.](http://localhost:2368/metas-s-m-a-r-t/) ou seja, criar metas que sejam: espec√≠ficas (S), mensur√°veis (M), alcan√ß√°veis (A), realistas (R) e temporais (T).\n\nOutra possibilidade √© utilizar o [5W2H](http://localhost:2368/o-que-e-5w2h/), que consiste em responder 7 perguntas:\n\n- O que?\n\n- Por que?\n\n- Onde?\n\n- Quando?\n\n- Quem?\n\n- Como?\n\n- Quanto?\n\n### 2. M√©tricas\n\n\u003e S√£o [indicadores](http://localhost:2368/indicadores/) que apontam se uma meta foi alcan√ßada ou n√£o. Devem, ser mensurados atrav√©s de f√≥rmulas matem√°ticas ou m√©todos de an√°lise qualitativa. Uma meta pode ter mais de uma m√©trica atribu√≠da a si.\n\nIndicadores possuem componentes que facilitam seu entendimento e garatem melhor seu funcionamento sabia mais nesse [post](http://localhost:2368/indicadores/).\n\n### 3. Medi√ß√£o\n\n\u003e Abarca as fontes de dados que ser√£o usados nas m√©tricas estabelecidas e a descri√ß√£o das rotinas de mensura√ß√£o delas, tanto em termos de ferramentas quanto de procedimentos.\n\nAqui continuamos evoluindo utilizando as etapas anteriores. Por isso utilizamos os indicadores que foram criados e buscamos melhores formas de medir aquilo que foi pedido. Aqui podemos utilizar ferramentas automatizadas, uma tabela no excel ou mesmo um papel e uma caneta.\n\nO mais importante √© criar o h√°bito da mensura√ß√£o na equipe, fazendo com que todos consigam fornecer as informa√ß√µes.\n\n4. Melhoria\n\n\u003e Equivale ao estabelecimento inicial de formas de garantia da qualidade dos projetos, dos riscos e restri√ß√µes subjacentes √† cada meta estabelecida. Os elementos de Melhoria trabalhados nessa etapa visam fundamentar rotinas de melhoria cont√≠nua e gest√£o de riscos sobre os trabalhos realizados\n\n## Canvas\n\nEsse √© um prot√≥tipo do canvas de Gest√£o utilizando os 4 Ms\n\n![](http://localhost:2368/content/images/2020/09/20200923_160921.jpg)\n\nConstruindo em parceria com a [Mense Desenvolvimento Humano e Organizacional](http://mense.com.br), [Jo√£o Vitor Coelho](https://www.linkedin.com/in/jo√£o-vitor-coelho-8aa36a113/), [Antonio Isidro](https://www.linkedin.com/in/antonio-isidro-dr-005862a5/?originalSubdomain=br) e [Larissa Siqueira](https://www.linkedin.com/in/larissa-siqueira-10800062/)","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_The-case-against-Mob-Programming":{"title":"The case against Mob Programming","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_The-need-for-Accountability":{"title":"The need for Accountability","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_The-problems-with-traditional-project-management":{"title":"The problems with traditional project management","content":"Antes de falar dos problemas precisamos entender qual a defini√ß√£o de \"M√©todos tradicionais\".\n\nEntende-se por m√©todos tradicionais de gest√£o aqueles nos quais o produto s√≥ faz sentido quando entregue em sua totalidade, ou seja, apenas com 100% do projeto cumprido √© que o cliente perceber√° algum valor.\n\n_**[Nota]**N√£o existe uma m√°xima que define que uma empresa precisa adotar um ou outro modelo de gest√£o de projetos. √â preciso entender a diferen√ßa entre eles e analisar o projeto que ser√° iniciado para adequar ao m√©todo que melhor atender√° aos seus objetivos._\n\n# **Os problemas mais comuns**\n\n### - Planejamento feito no in√≠cio\n\nAo decidir que todo o planejamento ser√° feito no in√≠cio do projeto partimos de algumas premissas importantes:\n\n-   Os clientes sabem exatamente o que eles querem;\n-   A equipe √© capaz de estimar com exatid√£o.\n\nPor√©m, o que √© visto, na maioria das vezes, √© que essas premissas n√£o s√£o verdadeiras. Vivemos em um [Mundo V.U.C.A.](http://localhost:2368/mundo-v-u-c-a/) e muitas vezes aquilo que acredit√°vamos ser o objetivo ou a melhor forma de alcan√ßar esse objetivo mudam com o tempo.\n\n### - Demora para entrega das fases e do projeto\n\nO planejamento foi feito e agora ocorrer√° o in√≠cio das fases do projeto, sendo algumas das principais:\n\n-   Desenvolvimento;\n-   Teste;\n-   Entrega.\n\nAo concentrar o desenvolvimento do projeto em uma √∫nica fase e realizar as entregas no final, perdemos muito tempo antes de mostrar algum valor para o cliente do projeto. Ainda sobre a separa√ß√£o definida das etapas tornamos mais dif√≠ceis os testes que precisam ser feitos pois quase sempre s√£o extensos e em um espa√ßo muito curto de tempo.\n\n### - ROI no final do projeto\n\nO ROI (_Return of Investment_) √© um indicador simples:**ROI = Receita ‚Äî custo / custo**Ou: Lucro obtido no projeto dividido pelo total gasto com esse projeto.\n\n√â um indicador que, apesar de n√£o ser espec√≠fico, serve para mostrar, no m√≠nimo, se o projeto est√° dando lucro ou n√£o. Utilizando esse indicador em um projeto tradicional, a informa√ß√£o s√≥ aparece na entrega, ou seja, no final. Enquanto com uma abordagem √°gil e incremental a informa√ß√£o √© recebida a cada entreg√°vel e a equipe pode tomar alguma a√ß√£o de corre√ß√£o ou melhoria.\n\n### - Pouca experi√™ncia para a tomada de decis√£o\n\nTomada de decis√µes muito concentrada no in√≠cio sem levar em considera√ß√£o a experi√™ncia e o conhecimento da equipe e do projeto.\n\nA medida que trabalhamos com alguma coisa ganhamos experi√™ncia, conhecimento e melhoramos nossas entregas, basta voc√™ pensar, por exemplo, como era o som de quando voc√™ aprendeu a tocar algum instrumento em compara√ß√£o com hoje em dia.\n\n### - Requisitos pouco claros\n\nLevanta-se tudo de antem√£o, exigindo de todos os atores (gerente, equipe e cliente) um conhecimento que, muitas vezes, est√° al√©m do poss√≠vel para aquele momento.\n\nUma forma f√°cil de entender esse problema √© pensar na sua vis√£o, qual o n√≠vel de detalhes que voc√™ pode dar sobre um pr√©dio ou uma arvore a quilometros de dist√¢ncia de voc√™? E se agora voc√™ pegar uma folha em suas m√£os, quantos detalhes voc√™ enxerga?\n\nSeguindo a mesma ideia os entreg√°veis de projeto podem ficam mais claros a medida que o cliente entende melhor as suas necessidades, que partes do projeto foram entregues e mais informa√ß√£o √© adicionada a essa \"equa√ß√£o\".\n\n### - Resist√™ncia a Mudan√ßas\n\nUma vez definidos o or√ßamento, insumos, objetivo ou o projeto como um todo, qualquer mudan√ßa vai gerar um custo. Um custo de um novo planejamento, talvez algum desperd√≠cio. Al√©m disso temos uma quest√£o psicol√≥gica, da zona de conforto, onde n√£o gostamos de mudar o caminho que definimos. Basta voc√™ imaginar a sua frustra√ß√£o quando um acidente ou uma reforma te obriga a mudar seu caminho di√°rio para o trabalho.\n\n### - Projetos longos demais\n\nSeguindo com a ideia acima, projetos que utilizam a \"metodologia tradicional\" tender a ser mais longos pois evitam fazer mudan√ßas at√© que seja tarde demais, e essas tenham que ser muito grandes e custos, fazendo com que muitas vezes o projeto precise se estender para cumprir com as novas necessidades.\n\n### - Sem tempos para testes\n\nTodo o projeto deve ser planejado no in√≠cio, dessa forma o cronograma √© elaborado antes de haver uma clareza em rela√ß√£o a complexidade, riscos e capacidades da equipe. Por esse motivo, a equipe acaba priorizando a entrega no prazo e, muitas vezes, o tempo para testes, refatora√ß√µes e corre√ß√µes √© curto j√° que essas a√ß√µes s√£o realizadas apenas ao ap√≥s o desenvolvimento do projeto.\n\n### **-** Desperd√≠cio\n\nTendo em vista todos os problemas apresentados anteriormente, n√£o √© dif√≠cil pensar nas v√°rias formas de perdas, como funcionalidades ou partes do projeto que acabam perdendo o sentido ao longo do tempo de vida do projeto, ou tamb√©m o retrabalho ap√≥s a entrega e o maior gasto de energia para corre√ß√£o de problemas encontrados tardiamente.\n\n## Nem tudo √© ruim\n\nDevemos ter sempre em mente que o m√©todo tradicional n√£o √© ruim e apresenta muitos benef√≠cios e aplica√ß√µes, afinal foi e continua sendo usado para a entrega de projetos de diferentes tipos. Um exemplo muito comum de projeto que precisa ser feito utilizando m√©todos tradicionais √© a constru√ß√£o civil.Desta maneira, conclu√≠mos que o importante √© considerar o projeto em quest√£o e estudar qual m√©todo de gerenciamento proporcionar√° maiores chances de melhores resultado!","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","agile-foundations","project-management"]},"/_Time-box":{"title":"Time box","content":"Time-box significa ‚Äúcaixa de tempo‚Äù,e define o tempo para realizar cada tarefas.\n\nUma forma de pensar em time-box √© lembrar de um jogo de Futebol: dividido em 2 tempos de 45 minutos cada. Mas vale lembrar: na cultura √°gil n√£o existem acr√©scimos.\n\nPorque limitar?\n\nO ser humano tende a gastar todo o tempo que √© dispon√≠vel e, ao delimitar o tempo, se reduz as chances e as oportunidades para procrastina√ß√£o.\n\n# **T√©cnicas comuns**\n\n-   [Pomodoro](http://localhost:2368/pomodoro/) (Menos trocas de contexto).\n-   Reuni√µes com Timebox (Divis√µes de tempo).","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","productivity","tools"]},"/_Typescript":{"title":"Typescript 101","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Using-PostgreSQL-for-everything":{"title":"_Using PostgreSQL for everything","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[]},"/_V.U.C.A":{"title":"V.U.C.A","content":"A medida que conhecemos mais sobre Agilidade, encontramos com certa frequ√™ncia algumas palavras ou defini√ß√µes, uma delas √© o Mundo V.U.C.A. Mas afinal o que significa isso?\n\nV.U.C.A. √© uma sigla do ingl√™s para definir algo que √©:\n\n### V - Volatility (volatilidade)\n\nO momento presente √© muito din√¢mico, vol√∫vel, veloz e ef√™mero, n√£o segue padr√µes previs√≠veis, por isso, n√£o podemos buscar no passado as solu√ß√µes para o futuro. Isso demanda adapta√ß√µes r√°pidas e precisas, como uma forma de manter os planos fazendo sentido, mesmo com as mudan√ßas de cen√°rio.\n\n### U - Uncertainty (incerteza)\n\nO ambiente inst√°vel mudar√° seus planos em diversos n√≠veis. A alta conectividade entre pessoas, processos e plataformas gera uma rela√ß√£o de depend√™ncia que afeta os planos de curto, m√©dio e longo prazos. Nesse cen√°rio, ter pessoas com opini√µes realmente diversas faz a diferen√ßa. Outras viv√™ncias podem trazer outra forma de lidar com determinados problemas.\n\n### C - Complexity (complexidade)\n\nEste termo remete √†s in√∫meras vari√°veis que afetam nosso dia a dia. No entanto, um mundo mais complexo requer solu√ß√µes mais simples. Precisamos aprender a lidar com a n√£o linearidade das situa√ß√µes. Se tentarmos lidar com todas as vari√°veis de maneira complexa, correremos o risco de perder o timing para solucionar tal problema.\n\n### A - Ambiguity (ambiguidade)\n\nEste termo significa a falta de clareza sobre o significado, a causa e as circunst√¢ncias de um acontecimento. E por esse motivo, muitas vezes, n√£o h√° uma resposta certa para nossas quest√µes, pois tudo √© amb√≠guo. O que realmente importa √© que a decis√£o tomada fa√ßa sentido para a situa√ß√£o e traga efici√™ncia. N√£o podemos sustentar uma vis√£o t√£o manique√≠sta na vida real.\n\n### Resumindo\n\nDe forma resumida estamos falando de um mundo em constante mudan√ßa, com a inclus√£o de cada vez mais pessoas e pontos de vista, o que torna cada vez mas dif√≠cil definir algo como A melhor solu√ß√£o ou A escolha certa!\n\nSabendo disso, podemos utilizar algumas ferramentas e m√©todos diferentes para lidar com essa incerteza, e assim como um Capit√£o que tenta guiar seu navio no nevoeiro, vamos devagar observando um pouco a frente e utilizando os nossos conhecimentos e aprendizados para chegar no objetivo.","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Version-Control":{"title":"Version Control","content":"#dev #git #data-engineering ","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["dev","git","data-engineering"]},"/_Virtual-Environments":{"title":"Virtual Environments","content":"#data-engineering #python ","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["data-engineering","python"]},"/_WSL2-and-VSCode":{"title":"WSL2 and VSCode","content":"# Por qu√™?\n\nO Windows Sybsystem for Linux permite aos desenvolvedores rodar um ambiente GNU/Linux ‚Äì incluindo a maioria das ferramentas de linhas de comando, utilities e aplica√ß√µes ‚Äì diretamente no windows, sem o custo geralmente associado a M√°quiinas virtuais tradicionais ou DualBoot.\n\nO WSL cria um espa√ßo onde voc√™ pode instalar diferentes vers√µes do Linux e integrar algumas ferramentas para facilitar o desenvolvimento em diferentes plataformas.\n\nDentro da √Årea de dados vamos utilizar v√°rias ferramenta de c√≥digo aberto da Apache Foundation, por√©m algumas das ferramentas utilizadas funcionam apenas no Linux. por isso √© importante ter dispon√≠vel tal ambiente.\n\n# Instalando o WSL2\n\nPara instalar o WSL2 vamos utilizar o [tutorial disponibilizado pela pr√≥pria Microsoft](https://docs.microsoft.com/pt-br/windows/wsl/install).\n\n## Pr√©-requisitos\n\nVoc√™ deve estar executando o Windows 10 vers√£o 2004 e superior (Build 19041 e superior) ou o Windows 11.\n\n## Instalando\n\n1.  Abrir o Windows Powershell como Administrador e execute\n\n2. Ap√≥s o fim da instala√ß√£o execute\n\n3. Para executar a linha de comando, procure por: Ubuntu\n\n## (Opcional) Executar o script para configura√ß√£o b√°sica do sistema\n\nO script a seguir foi feito para criar um setup inicial no seu ambiente Ubuntu\n\n1.  Acesse: [http://github.com/ArthurPieri/Scripts/blob/master/terraforming.sh](http://github.com/ArthurPieri/Scripts/blob/master/terraforming.sh)\n2.  Copie todo o script\n3.  Abra seu terminal Linux e digite\n\n4. Copie todo o conteudo do script para o terminal (para colar o que foi copiado voc√™ pode usar o bot√£o direito do mouse)\n\n5. ‚Äòctrl+x‚Äô para fechar e 'y' para confirmar\n\n6. Transforme o arquivo em um execut√°vel com o comando:\n\n7. Execute o arquivo\n\n8. Siga as instru√ß√µes que apareceram na sua tela\n\n### Github e Chaves SSH\n\n1.  Para copiar a chave SSH para o GITHUB e facilitar o download dos reposit√≥rios, primeiro pegue as informa√ß√µes da sua chave p√∫blica\n\n2. Copie a chave que aparece:\n\n3. Acesse: [https://github.com/settings/keys](https://github.com/settings/keys)\n\n4. Selecione a op√ß√£o: ‚Äúadd new SSH key‚Äù ou ‚ÄúAdicionar nova chave SSH‚Äù\n\n![](http://localhost:2368/content/images/2022/01/image-11.png)\n\n5. Cole a informa√ß√£o que voc√™ copiou no campo: Key\n\n![](http://localhost:2368/content/images/2022/01/image-12.png)\n\n6. No campo Title coloque um nome que seja significativo e te ajude a lembrar a qual m√°quina essa chave pertence\n\n7. Finalize clicando em ‚ÄúAdd SSH Key‚Äù\n\n# Instalando o VScode\n\n1.  Para instalar o VSCode basta ir at√© o site: [https://code.visualstudio.com/download](https://code.visualstudio.com/download)\n2.  Buscar a vers√£o do seu sistema operacional\n3.  Baixar o arquivo\n4.  Instalar o arquivo.\n\n# Configurando o VScode para integrar com o WSL2\n\n1.  Ap√≥s a instala√ß√£o do VSCode\n2.  Na barra iniciar, procure por vscode\n3.  execute\n4.  Para fazer a integra√ß√£o com o WSL2 v√° em extensions e procure por ‚ÄòRemote‚Äô e instale as extens√µes:\n5.  Remote - WSL\n6.  Remote - Development\n\n![](http://localhost:2368/content/images/2022/01/image-13.png)\n\n5. Ap√≥s o fim da instala√ß√£o, para acessar seu ambiente Linux, v√° at√© o canto inferior esquerdo e clique no quadrado verde e selecione a op√ß√£o: NEW WSL WINDOW\n\n![](http://localhost:2368/content/images/2022/01/image-14.png)\n\n6. O vscode vai abrir uma nova janela, instalar as ferramentas necess√°rias no seu ambiente linux.\n\n7. Voc√™ pode confirmar que a Janela que voc√™ est√° utilizando est√° conectada ao WSL olhando na parte inferior esquerda do VSCode deve apresentar: WSL: Ubuntu\n\n![](http://localhost:2368/content/images/2022/01/image-15.png)\n\n# Finalizando\n\nDessa forma voc√™ agora consegue executar c√≥digos e ferramentas do Linux diretamente nessa Janela do VSCode.","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_What-about-Github-Flow":{"title":"_What about Github Flow?","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[]},"/_What-are-agile-methods":{"title":"What are agile methods?","content":"Os m√©todos √°geis s√£o uma alternativa √† gest√£o tradicional de projetos e [surgiram](http://localhost:2368/a-origem-do-agil/) gra√ßas ao desenvolvimento de software, hoje podendo ser aplicados a qualquer tipo de projeto. Eles v√™m ajudando muitas equipes a encarar as imprevisibilidades dentro de um projeto, atrav√©s de entregas incrementais e ciclos iterativos.\n\nOs m√©todos √°geis buscam [promover](http://localhost:2368/beneficios-da-agilidade/) um processo de gerenciamento de projetos que incentiva a inspe√ß√£o e a adapta√ß√£o frequente. √â uma [filosofia que acaba por promover](http://localhost:2368/premissas-da-agilidade/) maior trabalho em equipe, auto-organiza√ß√£o, comunica√ß√£o frequente, foco no cliente e entregas de valor.\n\nBasicamente, os m√©todos √°geis s√£o um conjunto de pr√°ticas eficazes designadas para permitir uma entrega r√°pida e de alta qualidade do produto, tendo uma abordagem de neg√≥cios que alinha o desenvolvimento do projeto com as necessidades do cliente e os objetivos da empresa.\n\nSurgiram como uma resposta as [mudan√ßas constantes](http://localhost:2368/mundo-v-u-c-a/) no mundo e com o aprendizado de d√©cadas de desenvolvimento de projetos. Os m√©todos √°geis foram criados para trabalhar com projetos Complexos, sendo que sua efic√°cia √© reduzida ao trabalhar com projetos muito claramente definidos, como por exemplo a constru√ß√£o de um pr√©dio.\n\nExemplos comuns de \"m√©todos √°geis\"\n\n-   [Scrum](http://localhost:2368/scrum-101/)\n-   [Kanban](http://localhost:2368/kanban-101/)\n-   [Squads](http://localhost:2368/squads/)","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","agile-foundations"]},"/_Whats-so-good-about-Agile":{"title":"What's so good about Agile?","content":"# The benefits of using agile\nA metodologia √Ågil possibilita um grande n√∫mero de vantagens tanto para a equipe envolvida quanto para os clientes. Tendo isso em mente, preparamos uma lista com alguns dos principais benef√≠cios gerados pela Agilidade. Confira!\n\n# **Gest√£o da incerteza**\n\nO planejamento iterativo e as entregas pequenas s√£o estrat√©gia que permitem a redu√ß√£o dos riscos. As decis√µes s√£o tomadas √† medida que a equipe aprende sobre o tema e adquire mais conhecimento e mais certezas. Isso se op√µe ao proposto no modelo Waterfall, no qual a tomada de decis√µes acontece no in√≠cio do projeto.Gra√ßas ao maior conhecimento da equipe tanto em rela√ß√£o √†s necessidades dos clientes como tamb√©m √† sua pr√≥pria capacidade de produ√ß√£o, existe um grau maior de certeza e confian√ßa em cada decis√£o.\n\n# **Escopo flex√≠vel**\n\nOs clientes podem alterar o escopo do projeto ao longo do processo. Dessa forma, a equipe se compromete n√£o com dois anos de projeto, mas apenas com uma itera√ß√£o (1 a 4 semanas).Com isso, a cada semana a ordem das entregas e as necessidades podem mudar, e a equipe pode ent√£o se adaptar entregando sempre o maior valor de neg√≥cio. Assim, a flexibilidade e adaptabilidade s√£o princ√≠pios a serem seguidos.\n\n# **Entregas R√°pidas**\n\nAs entregas acontecem a cada release, ou mesmo a cada itera√ß√£o. Dessa forma, a equipe consegue colocar produtos no mercado com mais agilidade.Com entregas mais r√°pidas, tamb√©m √© poss√≠vel obter feedback, buscar melhorias e adaptar as necessidades, sejam essas do cliente ou do mercado, com uma velocidade maior.\n\n# **Mais qualidade**\n\nOs testes s√£o cont√≠nuos, feitos n√£o apenas ao final, mas ao longo de todo o desenvolvimento. Isso permite que os erros sejam identificados e tratados com anteced√™ncia.\n\n# **Menos desperd√≠cio**\n\nOs requisitos s√£o detalhados √† propor√ß√£o que ganham valor para o cliente e entram na fila de desenvolvimento. Dessa forma, requisitos n√£o implementados s√£o menos comuns.\n\n# **Mais visibilidade**\n\nTodas as informa√ß√µes est√£o sempre vis√≠veis em locais de f√°cil acesso, permitindo que a equipe identifique onde cada um de seus membros est√° trabalhando. Dessa forma, a identifica√ß√£o de gargalos e dificuldades √© facilitada, e, consequentemente, a colabora√ß√£o dentro da equipe √© beneficiada.\n\n# **Motiva√ß√£o**\n\nO time consegue saber exatamente para onde o projeto vai, em qual fase o andamento est√° e quanto falta para a entrega. Al√©m disso, as entregas cont√≠nuas ajudam o time a ver o resultado de seu esfor√ßo, aumentando a motiva√ß√£o.\n\n# **Motiva√ß√£o como APM**\n\n**A**utonomia_: posso fazer as coisas da maneira que eu acredito ser a melhor;_**P**rop√≥sito_: tudo o que eu fa√ßo eu concordo e tem um prop√≥sito final claro;_**M**aestria_: empresa d√° espa√ßo pra que eu me torne melhor naquilo que gosto de fazer._\n\n# **Lideran√ßa compartilhada**\n\nA lideran√ßa na gest√£o √°gil deixa de ser espec√≠fica de uma pessoa e passa a ser dividida entre toda a equipe. Dessa forma, demonstra:\n\n-   Confian√ßa na equipe;\n-   Transpar√™ncia;\n-   Possibilidade de o integrante ser escutado.;\n\nA lideran√ßa √© emergente e situacional a depender da necessidade da equipe. Isso permite explorar o que h√° de melhor em cada membro da equipe e reduz o impacto das fraquezas de um √∫nico l√≠der.\n\n_‚ÄúReady to Lead, Ready to Follow‚Äù Navy Seals_\n\n# **Empoderamento e Delega√ß√£o**\n\n-   Uma decis√£o que normalmente seria tomada por apenas uma pessoa pode ser compartilhada.\n-   Uma tarefa pode ser dividida ou delegada.\n\n_A lideran√ßa √© importante demais para ficar restrita a uma s√≥ pessoa._\n\n# **Informa√ß√µes limitadas x Vis√£o limitada**\n\nEm projetos tradicionais, o Gestor possui informa√ß√µes limitadas do que acontece no dia a dia, enquanto o colaborador possui uma vis√£o limitada do projeto., Ao utilizar m√©todos √°geis, com uma vis√£o clara e transparente das informa√ß√µes, √© poss√≠vel tomar decis√µes mais embasadas e com menores riscos.\n\nDesse modo, tendo em mente a realidade do mercado, a aplica√ß√£o da metodologia √Ågil dentro de cen√°rios apropriados pode representar um grande diferencial para seu neg√≥cio!","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["agile","agile-foundations"]},"/_When-should-you-use-Traditional-Management-Methods":{"title":"When should you use Traditional Management Methods","content":"First of All we have to understand the definition of \"Traditional Management Methods\" or TMM for short.\n\nTraditional Management Methods are a bunch of\n\nAntes de falar dos problemas precisamos entender qual a defini√ß√£o de \"M√©todos tradicionais\".\n\nEntende-se por m√©todos tradicionais de gest√£o aqueles nos quais o produto s√≥ faz sentido quando entregue em sua totalidade, ou seja, apenas com 100% do projeto cumprido √© que o cliente perceber√° algum valor.\n\n_**[Nota]**N√£o existe uma m√°xima que define que uma empresa precisa adotar um ou outro modelo de gest√£o de projetos. √â preciso entender a diferen√ßa entre eles e analisar o projeto que ser√° iniciado para adequar ao m√©todo que melhor atender√° aos seus objetivos._\n\n# **Os problemas mais comuns**\n\n### - Planejamento feito no in√≠cio\n\nAo decidir que todo o planejamento ser√° feito no in√≠cio do projeto partimos de algumas premissas importantes:\n\n-   Os clientes sabem exatamente o que eles querem;\n-   A equipe √© capaz de estimar com exatid√£o.\n\nPor√©m, o que √© visto, na maioria das vezes, √© que essas premissas n√£o s√£o verdadeiras. Vivemos em um [Mundo V.U.C.A.](http://localhost:2368/mundo-v-u-c-a/) e muitas vezes aquilo que acredit√°vamos ser o objetivo ou a melhor forma de alcan√ßar esse objetivo mudam com o tempo.\n\n### - Demora para entrega das fases e do projeto\n\nO planejamento foi feito e agora ocorrer√° o in√≠cio das fases do projeto, sendo algumas das principais:\n\n-   Desenvolvimento;\n-   Teste;\n-   Entrega.\n\nAo concentrar o desenvolvimento do projeto em uma √∫nica fase e realizar as entregas no final, perdemos muito tempo antes de mostrar algum valor para o cliente do projeto. Ainda sobre a separa√ß√£o definida das etapas tornamos mais dif√≠ceis os testes que precisam ser feitos pois quase sempre s√£o extensos e em um espa√ßo muito curto de tempo.\n\n### - ROI no final do projeto\n\nO ROI (_Return of Investment_) √© um indicador simples:**ROI = Receita ‚Äî custo / custo**Ou: Lucro obtido no projeto dividido pelo total gasto com esse projeto.\n\n√â um indicador que, apesar de n√£o ser espec√≠fico, serve para mostrar, no m√≠nimo, se o projeto est√° dando lucro ou n√£o. Utilizando esse indicador em um projeto tradicional, a informa√ß√£o s√≥ aparece na entrega, ou seja, no final. Enquanto com uma abordagem √°gil e incremental a informa√ß√£o √© recebida a cada entreg√°vel e a equipe pode tomar alguma a√ß√£o de corre√ß√£o ou melhoria.\n\n### - Pouca experi√™ncia para a tomada de decis√£o\n\nTomada de decis√µes muito concentrada no in√≠cio sem levar em considera√ß√£o a experi√™ncia e o conhecimento da equipe e do projeto.\n\nA medida que trabalhamos com alguma coisa ganhamos experi√™ncia, conhecimento e melhoramos nossas entregas, basta voc√™ pensar, por exemplo, como era o som de quando voc√™ aprendeu a tocar algum instrumento em compara√ß√£o com hoje em dia.\n\n### - Requisitos pouco claros\n\nLevanta-se tudo de antem√£o, exigindo de todos os atores (gerente, equipe e cliente) um conhecimento que, muitas vezes, est√° al√©m do poss√≠vel para aquele momento.\n\nUma forma f√°cil de entender esse problema √© pensar na sua vis√£o, qual o n√≠vel de detalhes que voc√™ pode dar sobre um pr√©dio ou uma arvore a quilometros de dist√¢ncia de voc√™? E se agora voc√™ pegar uma folha em suas m√£os, quantos detalhes voc√™ enxerga?\n\nSeguindo a mesma ideia os entreg√°veis de projeto podem ficam mais claros a medida que o cliente entende melhor as suas necessidades, que partes do projeto foram entregues e mais informa√ß√£o √© adicionada a essa \"equa√ß√£o\".\n\n### - Resist√™ncia a Mudan√ßas\n\nUma vez definidos o or√ßamento, insumos, objetivo ou o projeto como um todo, qualquer mudan√ßa vai gerar um custo. Um custo de um novo planejamento, talvez algum desperd√≠cio. Al√©m disso temos uma quest√£o psicol√≥gica, da zona de conforto, onde n√£o gostamos de mudar o caminho que definimos. Basta voc√™ imaginar a sua frustra√ß√£o quando um acidente ou uma reforma te obriga a mudar seu caminho di√°rio para o trabalho.\n\n### - Projetos longos demais\n\nSeguindo com a ideia acima, projetos que utilizam a \"metodologia tradicional\" tender a ser mais longos pois evitam fazer mudan√ßas at√© que seja tarde demais, e essas tenham que ser muito grandes e custos, fazendo com que muitas vezes o projeto precise se estender para cumprir com as novas necessidades.\n\n### - Sem tempos para testes\n\nTodo o projeto deve ser planejado no in√≠cio, dessa forma o cronograma √© elaborado antes de haver uma clareza em rela√ß√£o a complexidade, riscos e capacidades da equipe. Por esse motivo, a equipe acaba priorizando a entrega no prazo e, muitas vezes, o tempo para testes, refatora√ß√µes e corre√ß√µes √© curto j√° que essas a√ß√µes s√£o realizadas apenas ao ap√≥s o desenvolvimento do projeto.\n\n### **-** Desperd√≠cio\n\nTendo em vista todos os problemas apresentados anteriormente, n√£o √© dif√≠cil pensar nas v√°rias formas de perdas, como funcionalidades ou partes do projeto que acabam perdendo o sentido ao longo do tempo de vida do projeto, ou tamb√©m o retrabalho ap√≥s a entrega e o maior gasto de energia para corre√ß√£o de problemas encontrados tardiamente.\n\n## Nem tudo √© ruim\n\nDevemos ter sempre em mente que o m√©todo tradicional n√£o √© ruim e apresenta muitos benef√≠cios e aplica√ß√µes, afinal foi e continua sendo usado para a entrega de projetos de diferentes tipos. Um exemplo muito comum de projeto que precisa ser feito utilizando m√©todos tradicionais √© a constru√ß√£o civil.Desta maneira, conclu√≠mos que o importante √© considerar o projeto em quest√£o e estudar qual m√©todo de gerenciamento proporcionar√° maiores chances de melhores resultado!","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_Why-you-should-not-hire-a-consulting-firm":{"title":"Why you should not hire a consulting firm?","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_You-need-to-learn-SQL-right-now-Network-chuck":{"title":"You need to learn SQL right now (Network chuck)","content":"\n# Draft\n**Walkthrough and commands:**\n\n**Update your repos**\n\nsudo apt install -y; sudo apt upgrade -y\n\n  \n\n**Install MySQL**\n\n_sudo apt install mysql-server_\n\n  \n\n**Verify MySQL is running**\n\n_sudo systemctl status mysql_\n\n  \n\n**Login to SQL**\n\n_sudo mysql_\n\n  \n\n**View databases**\n\n_show databases;_\n\n  \n\n**Create database**\n\n_CREATE DATABASE \u003cdatabase name\u003e;_\n\n  \n\n**Select database**\n\nUSE \u003cDatabase name\u003e;\n\n  \n\n**Show tables**\n\nSHOW tables;\n\n  \n\n**Create Table example**\n\n`_CREATE TABLE Characters (_`\n\n_`FirstName varchar(255),`_\n\n_`LastName varchar(255),`_\n\n_`Origin varchar(255),`_\n\n_`Age int,`_\n\n_`name varchar(255)`_\n\n`_);_`\n\n  \n\n**Show basic table info**\n\n_describe \u003ctable_name\u003e;_\n\n  \n\n**Adding data in to a table example**\n\n_INSERT INTO Characters (FirstName,LastName,Origin,Age,Alias)VALUES ('Thor','Odinson','Asgard',1500,'God of thunder');_\n\n  \n\n**Basic select statement**\n\n_SELECT * FROM \u003ctable\u003e;_\n\n  \n\n**Where clause example**\n\n_SELECT * FROM Avengers WHERE Origin = 'Earth';_\n\n  \n\n**Delete entry**\n\n`_DELETE FROM Characters_`\n\n`_WHERE FirstName = ‚ÄòJeff‚Äô;_`\n\n  \n\n**Update entry**\n\n_update table_\n\n_set \u003ccolumn\u003e = \u003cvalue\u003e_\n\n_where \u003ccondition\u003e;_\n\n  \n\n**Order by ascending**¬†\n\n_SELECT * FROM avengers ORDER BY Age ASC;_\n\n  \n\n**Order by descending**\n\n_SELECT * FROM avengers ORDER BY Age DESC;_\n\n  \n\n**Alter table**\n\n_alter table \u003c table name\u003e ¬†add \u003ccolumn\u003e \u003cdata type\u003e;_","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["SQL"]},"/_You-should-just-stop":{"title":"You should just stop!","content":"","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":[""]},"/_pointers-in-C_":{"title":"_pointers in C_","content":"#clang #data-engineering #ComputerScience \n\n[[_Memory and memory allocation in C]]\n","lastmodified":"2025-03-05T17:06:10.690131109Z","tags":["clang","ComputerScience","data-engineering"]},"/tags/agile":{"title":"agile","content":"","lastmodified":"2025-03-05T17:06:10.694131198Z","tags":[]}}