<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>data-engineering on</title><link>https://pieri.io/tags/data-engineering/</link><description>Recent content in data-engineering on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pieri.io/tags/data-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>98% Economy on Data Lake</title><link>https://pieri.io/98-economy-on-Data-lake/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/98-economy-on-Data-lake/</guid><description>The beginning One day I was looking at some of the KPIs from our Data lake; we use a pretty &amp;ldquo;standard&amp;rdquo; stack with:</description></item><item><title>_Clang - Graphs</title><link>https://pieri.io/_Clang-Graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-Graphs/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_Clang - Hash Tables</title><link>https://pieri.io/_Clang-Hash-Tables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-Hash-Tables/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_Clang - linked lists</title><link>https://pieri.io/_Clang-linked-lists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-linked-lists/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_Clang - queues</title><link>https://pieri.io/_Clang-queues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-queues/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_Clang - stacks</title><link>https://pieri.io/_Clang-stacks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-stacks/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_Clang - trees</title><link>https://pieri.io/_Clang-trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Clang-trees/</guid><description>#clang #data-engineering #ComputerScience
Types of Trees [[Binary Search Tree]] Each node has at most 2 children The left child is less than the parent The right child is greater than the parent No duplicates [[AVL Tree]] Self-balancing binary search tree The height of left and right subtrees of any node differ by at most 1 Insertion and deletion operations may cause the tree to become unbalanced [[Red-Black Tree]] Self-balancing binary search tree Each node is either red or black The root node is always black New nodes are always red No two adjacent red nodes Every path from a node to a null node has the same number of black nodes [[Balanced-Tree (B-tree)]] Self-balancing tree Each node can have more than 2 children Used in databases and file systems Each node contains a list of keys and a list of children Keys are sorted in ascending order Keys in the left child are less than the keys in the parent node Keys in the right child are greater than the keys in the parent node All leaves are at the same level [[B+ Tree]] Self-balancing tree Each node can have more than 2 children Used in databases and file systems Each node contains a list of keys and a list of children Keys are sorted in ascending order Keys in the left child are less than or equal to the keys in the parent node Keys in the right child are greater than the keys in the parent node All leaves are at the same level All keys are present in the leaf nodes Leaf nodes are linked together [[Splay Tree]] Self-balancing binary search tree Recently accessed nodes are moved closer to the root Used in caches and memory allocators</description></item><item><title>_Extract data from MongoDB using python</title><link>https://pieri.io/_Extract-data-from-MongoDB-using-python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Extract-data-from-MongoDB-using-python/</guid><description>#data-engineering #python #pandas #mongodb
The problem In the company, I&amp;rsquo;m currently working for, I was tasked to create a pipeline to bring data from MongoDB to our DataLake.</description></item><item><title>_Memory and memory allocation in C</title><link>https://pieri.io/_Memory-and-memory-allocation-in-C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Memory-and-memory-allocation-in-C/</guid><description>#clang #data-engineering #ComputerScience</description></item><item><title>_pointers in C_</title><link>https://pieri.io/_pointers-in-C_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_pointers-in-C_/</guid><description>#clang #data-engineering #ComputerScience
[[_Memory and memory allocation in C]]</description></item><item><title>Code Standards</title><link>https://pieri.io/_Code-Standards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Code-Standards/</guid><description>#coding #data-engineering</description></item><item><title>Email Management System Performance Optimization Project</title><link>https://pieri.io/Email-Management-System-Performance-Optimization-Project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/Email-Management-System-Performance-Optimization-Project/</guid><description>Email Management System Performance Optimization Project Executive Summary This report documents the successful optimization of our fundraising platform&amp;rsquo;s email management system.</description></item><item><title>Exploring Data Structures in C Programming: A Beginner's Guide</title><link>https://pieri.io/Exploring-Data-Structures-in-C-Programming-A-Beginners-Guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/Exploring-Data-Structures-in-C-Programming-A-Beginners-Guide/</guid><description>Exploring Data Structures in C Programming: A Beginner&amp;rsquo;s Guide Introduction to Data Structures in C
Why It Matters: As you delve deeper into programming and data, understanding what happens &amp;ldquo;under the roof&amp;rdquo; is crucial.</description></item><item><title>Learning SQL</title><link>https://pieri.io/_Learning-SQL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Learning-SQL/</guid><description>#data #SQL
What is SQL? Structured Query Language (SQL pronounced S Q L or Sequel) is a language focused in access and manipulating Databases, it became an ANSI standard in 1986 and ISO in 1987.</description></item><item><title>OBT</title><link>https://pieri.io/_OBT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_OBT/</guid><description>#data #data-engineering</description></item><item><title>Python - Mutable and Immutable types</title><link>https://pieri.io/Python-Mutable-and-Immutable-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/Python-Mutable-and-Immutable-types/</guid><description>While programming in Python, have you ever found a variable that changed its value seemly out of the blue? Perhaps you found someone else&amp;rsquo;s code that passes a variable to a function but returns nothing, and still, the variable was changed outside that function?</description></item><item><title>SQL Tables</title><link>https://pieri.io/SQL-Tables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/SQL-Tables/</guid><description>What are SQL Tables? All [[_RDBMS]] uses the same principle to store data: A two-dimensional table consists of Data rows on the Horizontal Axis and strictly enforced column types on the Vertical Axis.</description></item><item><title>Version Control</title><link>https://pieri.io/_Version-Control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Version-Control/</guid><description>#dev #git #data-engineering</description></item><item><title>Virtual Environments</title><link>https://pieri.io/_Virtual-Environments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pieri.io/_Virtual-Environments/</guid><description>#data-engineering #python</description></item></channel></rss>